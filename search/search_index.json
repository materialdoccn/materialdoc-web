{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\u5173\u4e8e","text":""},{"location":"#what-is-this-site-about","title":"What is this site about?","text":"<p>We feel there's a huge disconnect between google material design guidelines and developers docs. After collecting feedback on Google+ and Reddit we decided to make a site with a single list of available material components and samples of their usage.</p>"},{"location":"#what-are-you-planning-to-cover","title":"What are you planning to cover?","text":"<p>We want to describe how to use and style material components with google appcompat and design libraries.</p> <p>Later we will prepare tutorials of how to make widgets which are not available in google material spec/links to open source libraries.</p>"},{"location":"#what-is-different-between-app-compat-and-design-library","title":"What is different between app compat and design library?","text":"<ul> <li> <p><code>v7 appcompat library</code> - provide support of material design user interface implementations  for older Android platforms.</p> </li> <li> <p><code>design library</code> - provides various material design components which are not part of Android SDK.</p> </li> </ul>"},{"location":"#_1","title":"\u4f5c\u8005\u662f\u8c01?","text":"<ul> <li>Dmytro Danylyk</li> <li>Yakiv Mospan</li> <li>Sa\u00fal Molinero</li> <li>Roman Danylyk</li> <li>Volodymyr Yatsykiv</li> <li>Miguel Catalan Ba\u00f1uls</li> <li>Luis G. Valle</li> <li>Sa\u00fal D\u00edaz Gonz\u00e1lez</li> <li>Antonio Leiva</li> <li>Alexandru Simonescu</li> <li>Paresh Mayani</li> <li>Gonzalo Toledano</li> </ul>"},{"location":"#_2","title":"\u8bd1\u8005\u662f\u8c01?","text":"<ul> <li>\u8109\u8109\u4e0d\u5f97\u8bed</li> <li>Ailurus</li> <li>Goodev</li> </ul>"},{"location":"#_3","title":"\u9700\u8981\u4f60\u7684\u5e2e\u52a9?","text":"<ul> <li>Share this website to social media</li> <li>Star our repository github.com/materialdoccn</li> <li>Write or edit article and send pull request to <code>master</code> branch. (Make sure you have read how to contribute section)</li> </ul>"},{"location":"application/","title":"Android Application","text":"<p>I am happy to announce that we just released open source Android application which includes all source code (layouts, styles, colors) of materialdoc.cn tutorials.</p> <p>You can download apk and check how material components will look on different Android versions.</p>"},{"location":"article-template/","title":"Article name","text":"<p>From the Google material design documentation</p> <p>Always in the beginning of your article, you have to mention the section in the material design spec which talks about the component, pattern or animation that you talking about.</p>"},{"location":"article-template/#how-to-addimplement","title":"How to add/implement ?","text":"<p>I. Try to write small steps, if possible, always accompanied by a copy-paste ready block of code.</p> <pre><code>public class MainActivity extends AppCompatActivity {\n    ...\n}\n</code></pre> <p>II. All sentences should be end with a dot [.]</p> <p>III. Use the three ` symbol with the name of the language in order to highlight a block code.</p> <pre><code>// block of code\n</code></pre> <p>Note</p> <p>This is a small note, informing that this step could be realized in a different way, or just an important note regarding the last step</p>"},{"location":"article-template/#compatibility-issues","title":"Compatibility issues","text":"<p>Some components, animations, patterns have different behaviors in different API version. It would be nice to write a small paragraph about it. If show images about the differences better.</p>"},{"location":"article-template/#how-to-style","title":"How to Style ?","text":"<p>If components can be customized describe how to do this.</p>"},{"location":"how-to-contribute/","title":"How to contribute","text":"<ul> <li>If you want to edit an article, at the top right corner of every page there is <code>Pencil</code> icon.</li> <li> <p>If you want to write a new article.</p> <ul> <li>Create <code>article-name.md</code> file based on article-template.</li> <li>Put this file inside /docs/components or /docs/patterns folder.</li> <li>Put images inside /docs/images/ folder.</li> <li>Add article reference to mkdocs.ymld file.</li> <li>When ready send pull request to <code>master</code> branch.</li> </ul> </li> </ul>"},{"location":"how-to-contribute/#preview","title":"Preview","text":"<p>If you want to preview your article in browser, you have to install mkdocs.js.org and run local server.</p> <pre><code>cd materialdoc\nmkdocs serve\n</code></pre>"},{"location":"not_found/","title":"Ooops","text":"<p>Material Doc</p> <p>...I really wanted, more than anything else, to show you this article, but it does not exist yet. Maybe you are the right person to write it? If so, make sure you read \"how to contribute\" section.</p>"},{"location":"components/autocomplete/","title":"Auto-complete","text":"<p>From Google Material Design documentation.</p> <p>Use auto-complete text fields to present real-time suggestions or completions in dropdowns, so users can enter information more accurately and efficiently.</p>"},{"location":"components/autocomplete/#how-to-add","title":"How to add?","text":"<p>I. Declare your <code>AutoCompleteTextView</code> inside any <code>layout.xml</code>.</p> <pre><code>&lt;AutoCompleteTextView\n    android:id=\"@+id/autocompleteView\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:hint=\"Search dogs...\"/&gt;\n</code></pre> <p>II. Define a <code>string-array</code> that contains all text suggestions in a file inside <code>res/values</code> directory.</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;resources&gt;\n    &lt;string-array name=\"dogs_list\"&gt;\n        &lt;item&gt;Bichon Frise&lt;/item&gt;\n        &lt;item&gt;Border Collie&lt;/item&gt;\n        &lt;item&gt;Border Terrier&lt;/item&gt;\n        &lt;item&gt;Boxer&lt;/item&gt;\n        &lt;item&gt;Chihuahua&lt;/item&gt;\n        &lt;item&gt;German Shepherd&lt;/item&gt;\n        &lt;item&gt;Golden Retriever&lt;/item&gt;\n        &lt;item&gt;Greyhound&lt;/item&gt;\n    &lt;/string-array&gt;\n&lt;/resources&gt;\n</code></pre> <p>III. Define a <code>filterable list adapter</code> to manage the auto completion data list.</p> <pre><code>int layoutItemId = android.R.layout.simple_dropdown_item_1line;\nString[] dogArr = getResources().getStringArray(R.array.dogs_list);\nList&lt;String&gt; dogList = Arrays.asList(dogsArr);\nArrayAdapter&lt;String&gt; adapter = new ArrayAdapter&lt;&gt;(this, layoutItemId, dogList);\n\nAutoCompleteTextView autocompleteView =\n    (AutoCompleteTextView) findViewById(R.id.autocompleteView);\nautocompleteView.setAdapter(adapter);\n</code></pre>"},{"location":"components/autocomplete/#how-to-style","title":"How to style?","text":"<p>I. Declare custom styles in your <code>styles.xml</code> file.</p> <pre><code> &lt;style name=\"Autocomplete\" parent=\"Widget.AppCompat.Light.AutoCompleteTextView\"&gt;\n    &lt;item name=\"android:background\"&gt;@color/green500&lt;/item&gt;\n    &lt;item name=\"colorControlNormal\"&gt;@color/amber500&lt;/item&gt;\n    &lt;item name=\"colorControlActivated\"&gt;@color/cyan500&lt;/item&gt;\n&lt;/style&gt;\n</code></pre> <p>II. Apply this style to the <code>AutoCompleteTextView</code> via <code>android:theme</code> attribute.</p> <pre><code>&lt;AutoCompleteTextView\n    android:id=\"@+id/autocomplete_dogs\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:theme=\"@style/Autocomplete\"\n    android:hint=\"Search dogs...\" /&gt;\n</code></pre>"},{"location":"components/autocomplete/#drop-down-anchor","title":"Drop down anchor","text":"<p>By default, the dropdown list with your filtered data appear just below the <code>AutoCompleteTextView</code>.</p> <p>To change this position use <code>dropDownAnchor</code> attribute and reference another view id.</p> <pre><code>&lt;AutoCompleteTextView\n    android:id=\"@+id/autocomplete_dogs\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:theme=\"@style/Autocomplete\"\n    android:hint=\"Search dogs...\"\n    android:dropDownAnchor=\"@+id/header\"\n    android:dropDownWidth=\"match_parent\"\n    /&gt;\n</code></pre>"},{"location":"components/autocomplete/#custom-adapter","title":"Custom Adapter","text":"<p>To fully customize the dropdown list you need to provide your own <code>Adapter</code>. It needs to implement <code>Filterable</code> and <code>ListAdapter</code> interfaces.</p> <p>The easiest way to achieve this is by extending <code>ArrayAdapter</code> which already implements both interfaces.</p> <p>I. Create a custom adapter extending <code>ArrayAdapter</code> class.</p> <pre><code>class AutoCompleteDogsAdapter extends ArrayAdapter&lt;Dog&gt; {\n  ...\n}\n</code></pre> <p>II. Create a custom filter extending <code>Filter</code> class and provide your own filtering logic overriding <code>performFiltering</code> method.</p> <pre><code>class DogsFilter extends Filter {\n\n    AutoCompleteDogsAdapter adapter;\n    List&lt;Dog&gt; originalList;\n    List&lt;Dog&gt; filteredList;\n\n    public DogsFilter(AutoCompleteDogsAdapter adapter, List&lt;Dog&gt; originalList) {\n        super();\n        this.adapter = adapter;\n        this.originalList = originalList;\n        this.filteredList = new ArrayList&lt;&gt;();\n    }\n\n    @Override\n    protected FilterResults performFiltering(CharSequence constraint) {\n        filteredList.clear();\n        final FilterResults results = new FilterResults();\n\n        if (constraint == null || constraint.length() == 0) {\n            filteredList.addAll(originalList);\n        } else {\n            final String filterPattern = constraint.toString().toLowerCase().trim();\n\n                  // Your filtering logic goes in here\n            for (final Dog dog : originalList) {\n                if (dog.breed.toLowerCase().contains(filterPattern)) {\n                    filteredList.add(dog);\n                }\n            }\n        }\n        results.values = filteredList;\n        results.count = filteredList.size();\n        return results;\n    }\n\n    @Override\n    protected void publishResults(CharSequence constraint, FilterResults results) {\n        adapter.filteredDogs.clear();\n        adapter.filteredDogs.addAll((List) results.values);\n        adapter.notifyDataSetChanged();\n    }\n}\n</code></pre> <p>III. Provide your custom filter from your adapter class by overriding <code>getFilter()</code> method.</p> <pre><code>class AutoCompleteDogsAdapter extends ArrayAdapter&lt;Dog&gt; {\n\n    private final List&lt;Dog&gt; dogs;\n    private List&lt;Dog&gt; filteredDogs = new ArrayList&lt;&gt;();\n\n    public AutoCompleteDogsAdapter(Context context, List&lt;Dog&gt; dogs) {\n        super(context, 0, dogs);\n        this.dogs = dogs;\n    }\n\n    @Override\n    public int getCount() {\n        return filteredDogs.size();\n    }\n\n    @Override\n    public Filter getFilter() {\n        return new DogsFilter(this, dogs);\n    }\n\n    @Override\n    public View getView(int position, View convertView, ViewGroup parent) {\n        // Get the data item from filtered list.\n        Dog dog = filteredDogs.get(position);\n\n        // Inflate your custom row layout as usual.\n        LayoutInflater inflater = LayoutInflater.from(getContext());\n        convertView = inflater.inflate(R.layout.row_dog, parent, false);\n\n        TextView tvName = (TextView) convertView.findViewById(R.id.row_breed);\n        ImageView ivIcon = (ImageView) convertView.findViewById(R.id.row_icon);\n        tvName.setText(dog.breed);\n        ivIcon.setImageResource(dog.drawable);\n\n        return convertView;\n    }\n</code></pre>"},{"location":"components/bottom-navigation/","title":"Bottom navigation","text":"<p>From google material design documentation.</p> <p>Bottom navigation bars make it easy to explore and switch between top-level views in a single tap.</p>"},{"location":"components/bottom-navigation/#how-to-add","title":"How to add?","text":"<p>I. In your <code>build.gradle</code> add latest <code>design</code>  and <code>appcompat</code> libraries.</p> <pre><code>dependencies {\n    compile 'com.android.support:appcompat-v7:X.X.X'\n    compile 'com.android.support:design:X.X.X'\n\n    // where X.X.X version\n}\n</code></pre> <p>II. Make your activity extend <code>android.support.v7.app.AppCompatActivity</code>.</p> <pre><code>public class MainActivity extends AppCompatActivity {\n ...\n}\n</code></pre> <p>III. Declare navigation items in <code>menu</code> file.</p> <pre><code>&lt;menu xmlns:android=\"http://schemas.android.com/apk/res/android\"&gt;\n    &lt;item\n            android:id=\"@+id/recents\"\n            android:title=\"Recents\"\n            android:icon=\"@drawable/ic_history_24dp\"/&gt;\n    &lt;item\n            android:id=\"@+id/favorites\"\n            android:title=\"Favorites\"\n            android:icon=\"@drawable/ic_favorite_24dp\"/&gt;\n    &lt;item\n            android:id=\"@+id/nearby\"\n            android:title=\"Nearby\"\n            android:icon=\"@drawable/ic_place_24dp\"/&gt;\n&lt;/menu&gt;\n</code></pre> <p>IV. Declare <code>BottomNavigationView</code> inside your <code>layout.xml</code> file.</p> <pre><code>&lt;android.support.design.widget.BottomNavigationView\n    android:id=\"@+id/bottomNavigationView\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    app:menu=\"@menu/bottom_navigation_menu\"/&gt;\n</code></pre>"},{"location":"components/bottom-navigation/#how-to-style","title":"How to style?","text":"<p>I. Define custom color for navigation bar.</p> <pre><code>&lt;selector xmlns:android=\"http://schemas.android.com/apk/res/android\"&gt;\n    &lt;item android:state_checked=\"false\" android:color=\"@color/pink\"/&gt;\n    &lt;item android:color=\"@android:color/white\"/&gt;\n&lt;/selector&gt;\n</code></pre> <p>II.  Define custom backgrounds for navigation bar items.</p> <pre><code>// res/drawable, to support devices lower then 21 API\n&lt;selector xmlns:android=\"http://schemas.android.com/apk/res/android\"&gt;\n    &lt;item android:state_pressed=\"true\" android:drawable=\"@android:color/white\"/&gt;\n    &lt;item android:drawable=\"@android:color/transparent\"/&gt;\n&lt;/selector&gt;\n\n// res/drawable-v21 folder, for devices greater or equal then 21 API\n&lt;ripple xmlns:android=\"http://schemas.android.com/apk/res/android\"\n        android:color=\"@android:color/white\"&gt;\n&lt;/ripple&gt;\n</code></pre> <p>III. Declare custom style in your <code>styles.xml</code> file.</p> <pre><code>&lt;style name=\"BottomNavigation\"&gt;\n    &lt;item name=\"android:background\"&gt;@color/indigo&lt;/item&gt;\n    &lt;item name=\"itemBackground\"&gt;@drawable/navigation_bar_item_bg&lt;/item&gt;\n    &lt;item name=\"itemIconTint\"&gt;@color/navigation_bar_txt_color&lt;/item&gt;\n    &lt;item name=\"itemTextColor\"&gt;@color/navigation_bar_txt_color&lt;/item&gt;\n    &lt;item name=\"paddingStart\"&gt;@dimen/bottom_navigation_padding&lt;/item&gt;\n    &lt;item name=\"paddingEnd\"&gt;@dimen/bottom_navigation_padding&lt;/item&gt;\n&lt;/style&gt;\n</code></pre> <p>IV. Apply this style to your <code>BottomNavigationView</code> via <code>style</code> attribute.</p> <pre><code>&lt;android.support.design.widget.BottomNavigationView\n    android:id=\"@+id/bottomNavigationView\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    app:menu=\"@menu/bottom_navigation_menu\"\n    style=\"@style/BottomNavigation\"/&gt;\n</code></pre>"},{"location":"components/bottom-navigation/#handle-item-selection","title":"Handle item selection","text":"<pre><code>BottomNavigationView bottomNavigationView;\n// ...\nbottomNavigationView.setOnNavigationItemSelectedListener(new OnNavigationItemSelectedListener() {\n     @Override\n     public boolean onNavigationItemSelected(@NonNull MenuItem item) {\n         if (item.getItemId() == R.id.favorites) {\n             // on favorites clicked\n             return true;\n         }\n         return false;\n     }\n});\n</code></pre>"},{"location":"components/bottom-navigation/#select-item-programmatically","title":"Select item programmatically","text":"<pre><code>BottomNavigationView navigationView;\n// ...\nnavigationView= (BottomNavigationView) findViewById(R.id.bottomNavigationView);\nnavigationView.getMenu().getItem(itemToSelect).setChecked(true);\n</code></pre>"},{"location":"components/bottom-navigation/#get-selected-item","title":"Get selected item","text":"<p>There is no API to get selected item. Instead you can :</p> <p>I. Get <code>menu</code> from <code>BottomNavigationView</code> and search for checked item.</p> <pre><code>BottomNavigationView bottomNavigationView;\n// ...\nint getSelectedItem() {\n    Menu menu = bottomNavigationView.getMenu();\n    for (int i = 0; i &lt; menu.size(); i++) {\n        if (menu.getItem(i).isChecked()) {\n            return i;\n        }\n    }\n    return 0;\n}\n</code></pre> <p>II. Add global <code>selectedItem</code> variable and update it each time you do select item programmatically and each time you receive <code>OnNavigationItemSelected</code> event.</p>"},{"location":"components/bottom-sheets/","title":"Bottom Sheets","text":"<p>From google material design documentation.</p> <p>A bottom sheet is a sheet of material that slides up from the bottom edge of the screen.</p> <p>Bottom sheets are displayed only as a result of a user-initiated action, and can be swiped up to reveal additional content. A bottom sheet can be a temporary modal surface or a persistent structural element of an app.</p>"},{"location":"components/bottom-sheets/#how-to-add","title":"How to add?","text":"<p>I. In your <code>build.gradle</code> add latest <code>appcompat</code> and <code>design</code> libraries.</p> <pre><code>dependencies {\n    compile 'com.android.support:appcompat-v7:X.X.X' // where X.X.X version\n    compile 'com.android.support:design:X.X.X' // where X.X.X version\n}\n</code></pre> <p>II. Set the <code>app:layout_behavior</code> attribute with the value  <code>@string/bottom_sheet_behavior</code> which will allow your view or viewgroup appear as a bottom sheet.</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;LinearLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"300dp\"\n    android:orientation=\"vertical\"\n    android:padding=\"16dp\"\n    app:layout_behavior=\"@string/bottom_sheet_behavior\"&gt;\n\n    &lt;TextView\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Dandelion Chocolate\"\n        android:textAppearance=\"@style/TextAppearance.AppCompat.Display1\"\n        android:textColor=\"@android:color/black\"/&gt;\n&lt;/LinearLayout&gt;\n</code></pre> <p>Note</p> <p>You can use the <code>behavior_peekHeight</code> attribute to set the default height of the bottom sheet.</p> <p>III. Add your view which implements the bottom sheet behavior as a direct child of a <code>CoordinatorLayout</code>.</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;android.support.design.widget.CoordinatorLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    tools:context=\".MainActivity\" &gt;\n\n    &lt;android.support.design.widget.AppBarLayout\n        android:id=\"@+id/appbarLayout\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"?attr/actionBarSize\"\n        android:theme=\"@style/ThemeOverlay.AppCompat.Dark.ActionBar\" &gt;\n\n        &lt;android.support.v7.widget.Toolbar\n            android:id=\"@+id/appbar\"\n            android:layout_height=\"?attr/actionBarSize\"\n            android:layout_width=\"match_parent\"\n            android:minHeight=\"?attr/actionBarSize\"\n            android:background=\"?attr/colorPrimary\"\n            app:elevation=\"4dp\"\n            android:theme=\"@style/ThemeOverlay.AppCompat.Dark.ActionBar\"\n            app:popupTheme=\"@style/ThemeOverlay.AppCompat.Light\" &gt;\n\n        &lt;/android.support.v7.widget.Toolbar&gt;\n\n    &lt;/android.support.design.widget.AppBarLayout&gt;\n\n    &lt;!-- Your content --&gt;\n    &lt;include layout=\"@layout/content_main\" /&gt;\n\n    &lt;!-- Bottom Sheet --&gt;\n    &lt;include layout=\"@layout/bottom_sheets_main\" /&gt;\n&lt;/android.support.design.widget.CoordinatorLayout&gt;\n</code></pre> <p>Note</p> <p>You can wrap your views and viewgroups under <code>&lt;include&gt;</code> tags in order to keep clean your layouts.</p> <p>IV. Get a reference of <code>BottomSheetBehavior</code> with a reference of  the view which has the bottom behavior set. Use the <code>from</code> method of <code>BottomSheetBehavior</code>.</p> <pre><code>LinearLayout bottomSheetViewgroup = (LinearLayout) findViewById(R.id.bottom_sheet);\nBottomSheetBehavior bottomSheetBehavior = BottomSheetBehavior.from(bottomSheetViewgroup);\n</code></pre> <p>VI. To expand your bottom sheet use <code>setState</code> method with <code>BottomSheetBehavior.STATE_EXPANDED</code> parameter.</p> <pre><code>bottomSheetBehavior.setState(BottomSheetBehavior.STATE_EXPANDED);\n</code></pre> <p>You can handle these states via the <code>setState</code> method:</p> <ul> <li><code>STATE_EXPANDED</code>: To completely expand the bottom sheet.</li> <li><code>STATE_HIDE</code>: To completely hide the bottom sheet.</li> <li><code>STATE_COLLAPSED</code>: To set the bottom sheet height with the value set on the <code>peekHeight</code> attribute.</li> </ul>"},{"location":"components/bottom-sheets/#modal-bottom-sheets","title":"Modal bottom sheets","text":"<p>From google material design documentation.</p> <p>Modal bottom sheets are alternatives to menus or simple dialogs. They can also present deep-linked content from other apps. They are primarily for mobile.</p> <p>I. Create a class extending the <code>BottomSheetDialogFragment</code> inflated with a layout which will be used as the content of your modal bottom sheet.</p> <pre><code>public class ModalBottomSheet extends BottomSheetDialogFragment {\n\n    static BottomSheetDialogFragment newInstance() {\n        return new BottomSheetDialogFragment();\n    }\n\n    @Override\n    public View onCreateView(\n       LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n\n        View v = inflater.inflate(R.layout.bottom_sheet_modal, container, false);\n\n        return v;\n    }\n}\n</code></pre> <p>II. Create an instance of your modal bottom sheet and show it with the <code>show</code> method with a <code>SupportFragmentManager</code> and a String as parameters.</p> <pre><code>ModalBottomSheet modalBottomSheet = new ModalBottomSheet();\nmodalBottomSheet.show(getSupportFragmentManager(), \"bottom sheet\");\n</code></pre>"},{"location":"components/bottom-sheets/#how-to-anchor-views","title":"How to anchor views?","text":"<p>I. Add the view that will be anchored to the bottom sheet as a direct child of the <code>CoordinatorLayout</code></p> <pre><code>&lt;android.support.design.widget.FloatingActionButton\n    android:id=\"@+id/fab\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_margin=\"@dimen/fab_margin\"\n    android:src=\"@android:drawable/ic_dialog_email\"\n    /&gt;\n</code></pre> <p>II. Reference the id of the view wich has set the <code>BottomSheetBehavior</code> with the <code>layout_anchor</code> attribute.</p> <pre><code>&lt;android.support.design.widget.FloatingActionButton\n    android:id=\"@+id/fab\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_margin=\"@dimen/fab_margin\"\n    android:src=\"@android:drawable/ic_dialog_email\"\n    app:layout_anchor=\"@id/app_bar\"\n    /&gt;\n</code></pre> <p>III. Configure the <code>layout_anchorGravity</code> attribute with the desired gravity.</p> <pre><code>&lt;android.support.design.widget.FloatingActionButton\n    android:id=\"@+id/fab\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_margin=\"@dimen/fab_margin\"\n    android:src=\"@android:drawable/ic_dialog_email\"\n    app:layout_anchor=\"@id/app_bar\"\n    app:layout_anchorGravity=\"bottom|end\"\n    /&gt;\n</code></pre>"},{"location":"components/buttons/","title":"Buttons","text":""},{"location":"components/buttons/#raised-button","title":"Raised Button","text":"<p>\u6458\u81ea google material design \u6587\u6863.</p> <p>\u4e00\u4e2a\u5178\u578b\u7684\u77e9\u5f62 material \u6309\u94ae\u5728\u624b\u6307\u62ac\u8d77\u548c\u6309\u4e0b\u7684\u65f6\u5019\u4f1a\u5c55\u73b0\u58a8\u6c34\u5728\u7eb8\u4e0a\u6563\u5f00\u7684\u6548\u679c\u3002</p>"},{"location":"components/buttons/#_1","title":"\u5982\u4f55\u6dfb\u52a0?","text":"<p>I. \u5728\u4f60\u7684 <code>build.gradle</code> \u6587\u4ef6\u672b\u5c3e\u6dfb\u52a0 <code>appcompat</code> \u5e93.</p> <pre><code>dependencies {\n    compile 'com.android.support:appcompat-v7:X.X.X' // where X.X.X version\n}\n</code></pre> <p>II. \u521b\u5efa\u4f60\u7684 activity \u5e76\u7ee7\u627f\u81ea <code>android.support.v7.app.AppCompatActivity</code>.</p> <pre><code>public class MainActivity extends AppCompatActivity {\n    ...\n}\n</code></pre> <p>III. \u5728 <code>layout.xml</code> \u5185\u7684\u4efb\u610f\u4f4d\u7f6e\u58f0\u660e\u4f60\u7684 <code>Button</code></p> <pre><code>&lt;Button\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:text=\"Button\"/&gt;\n</code></pre>"},{"location":"components/buttons/#_2","title":"\u5982\u4f55\u8bbe\u7f6e\u6837\u5f0f?","text":"<p>I. \u5728\u4f60\u7684 <code>styles.xml</code> \u5185\u5b9a\u4e49\u81ea\u5b9a\u4e49\u6837\u5f0f\u3002</p> <pre><code>&lt;style name=\"MyButton\" parent=\"Theme.AppCompat.Light\"&gt;\n    &lt;item name=\"colorControlHighlight\"&gt;@color/indigo&lt;/item&gt;\n    &lt;item name=\"colorButtonNormal\"&gt;@color/pink&lt;/item&gt;\n&lt;/style&gt;\n</code></pre> <p>II. \u901a\u8fc7 <code>android:theme</code> \u5c5e\u6027\u5e94\u7528\u8fd9\u4e2a\u6837\u5f0f\u5230\u4f60\u7684 <code>Button</code> \u3002</p> <pre><code>&lt;Button\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:text=\"Button\"\n    android:theme=\"@style/MyButton\"/&gt;\n</code></pre>"},{"location":"components/buttons/#_3","title":"\u517c\u5bb9\u6027\u95ee\u9898","text":"<p>I. \u5207\u6362 <code>Button</code> \u6309\u4e0b\u72b6\u6001\u7684\u989c\u8272\u4f60\u53ef\u4ee5\u4f7f\u7528\u4e3b\u9898\u7684 <code>colorControlHighlight</code> \u5c5e\u6027\uff0c\u867d\u7136\u5b83\u4ec5\u4ec5\u5f71\u54cd Lollipop \u7248\u672c\u7684\u7cfb\u7edf\u3002</p> <p>II. Android <code>elevation</code> \u53ea\u5728 Lollipop \u8bbe\u5907\u4e0a\u6709\u6548\uff0c\u56e0\u6b64\u4f60\u5728 Lollipop \u4e4b\u524d\u7684\u8bbe\u5907\u4e0a\u5c06\u770b\u4e0d\u5230 <code>Button</code> \u5468\u56f4\u7684\u9634\u5f71\u3002</p>"},{"location":"components/buttons/#flat-button","title":"Flat Button","text":"<p>\u6458\u81ea google material design \u6587\u6863</p> <p>\u4e00\u4e2a\u5728\u6309\u4e0b\u7684\u65f6\u5019\u4f1a\u5c55\u73b0\u58a8\u6c34\u6563\u5f00\u7684\u6548\u679c\u4f46\u6ca1\u6709\u51f8\u8d77\u6548\u679c\u7531\u58a8\u6c34\u5f62\u6210\u7684\u6309\u94ae\u3002</p>"},{"location":"components/buttons/#_4","title":"\u5982\u4f55\u6dfb\u52a0?","text":"<p>I. \u5728\u4f60\u7684 <code>build.grade</code> \u6587\u4ef6\u672b\u5c3e\u6dfb\u52a0 <code>appcompat</code> \u5e93.</p> <pre><code>dependencies {\n    compile 'com.android.support:appcompat-v7:X.X.X' // where X.X.X version\n}\n</code></pre> <p>II. \u521b\u5efa\u4f60\u7684 activity \u5e76\u7ee7\u627f\u81ea <code>android.support.v7.app.AppCompatActivity</code>.</p> <pre><code>public class MainActivity extends AppCompatActivity {\n    ...\n}\n</code></pre> <p>III. \u5728 <code>layout.xml</code> \u5185\u7684\u4efb\u610f\u4f4d\u7f6e\u58f0\u660e\u4f60\u7684 <code>Button</code> \u5e76\u8bbe\u7f6e  <code>Borderless</code> \u6837\u5f0f.</p> <pre><code>&lt;Button\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:text=\"Button\"\n    style=\"@style/Widget.AppCompat.Button.Borderless\"/&gt;\n</code></pre>"},{"location":"components/buttons/#_5","title":"\u5982\u4f55\u8bbe\u7f6e\u6837\u5f0f?","text":"<p>I. \u5728\u4f60\u7684 <code>styles.xml</code> \u5185\u5b9a\u4e49\u81ea\u5b9a\u4e49\u6837\u5f0f\u3002</p> <pre><code>&lt;style name=\"MyButton\" parent=\"Theme.AppCompat.Light\"&gt;\n    &lt;item name=\"colorControlHighlight\"&gt;@color/pink&lt;/item&gt;\n&lt;/style&gt;\n</code></pre> <p>III. \u901a\u8fc7 <code>android:theme</code> \u5c5e\u6027\u5e94\u7528\u8fd9\u4e2a\u6837\u5f0f\u5230\u4f60\u7684 <code>Button</code>\u3002</p> <pre><code>&lt;Button\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:text=\"Button\"\n    android:theme=\"@style/MyButton\"\n    style=\"@style/Widget.AppCompat.Button.Borderless\"/&gt;\n</code></pre> <p>\u7ffb\u8bd1\u6c34\u5e73\u6709\u9650\uff0c\u6b22\u8fce\u6279\u8bc4\u6307\u6b63</p> <p>\u539f\u6587\u4f5c\u8005:Dmytro Danylyk \u539f\u6587\u94fe\u63a5: Buttons</p>"},{"location":"components/cards/","title":"Cards","text":"<p>\u6458\u81ea Google material design \u6587\u6863</p> <p>card \u53ef\u4ee5\u7528\u6765\u5c55\u793a\u4e00\u4e9b\u72ec\u7279\u76f8\u5173\u7684\u6570\u636e\uff0c\u7528\u6765\u4f5c\u4e3a\u66f4\u52a0\u8be6\u7ec6\u7684\u4fe1\u606f\u7684\u5165\u53e3\u3002\u4f8b\u5982\uff0c\u5361\u7247\u53ef\u80fd\u5305\u542b\u6709\u7167\u7247\uff0c\u6587\u5b57\uff0c\u5173\u4e8e\u4e00\u4e2a\u4e3b\u9898\u7684\u94fe\u63a5\u7b49\u3002</p>"},{"location":"components/cards/#_1","title":"\u5982\u4f55\u6dfb\u52a0\uff1f","text":"<p>I. \u5728 <code>build.gradle</code> \u91cc\u5f15\u5165 <code>cardview</code> \u5e93\u3002</p> <pre><code>dependencies {\n  compile 'com.android.support:cardview-v7:X.X.X' // where X.X.X version\n}\n</code></pre> <p>II. \u5728 <code>layout.xml</code> \u91cc\u58f0\u660e card \uff0c\u5e76\u7528\u5b83\u5305\u88f9\u5176\u4ed6\u7684 view \u3002</p> <pre><code>&lt;android.support.v7.widget.CardView\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"200dp\"&gt;\n\n    &lt;TextView\n        android:text=\"Hello World!\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"/&gt;\n\n&lt;/android.support.v7.widget.CardView&gt;\n</code></pre> <p>\u6ce8\u610f</p> <p>\u7ed9 CardView \u7684\u7236\u5e03\u5c40\u589e\u52a0\u5c5e\u6027 <code>android:clipToPadding=\"false\"</code> \uff0c\u53ef\u4ee5\u4fdd\u8bc1 CardView \u7684\u9634\u5f71\u4e0d\u88ab\u88c1\u526a\u6389\u3002</p>"},{"location":"components/cards/#_2","title":"\u5982\u4f55\u8bbe\u7f6e\u6837\u5f0f\uff1f","text":"<p>I. \u5728 <code>styles.xml</code> \u6587\u4ef6\u91cc\u58f0\u660e\u4f60\u81ea\u5b9a\u4e49\u7684\u6837\u5f0f\u3002</p> <pre><code>&lt;style name=\"MyCardViewStyle\" parent=\"Theme.AppCompat.Light\"&gt;\n    &lt;item name=\"cardCornerRadius\"&gt;2dp&lt;/item&gt;\n    &lt;item name=\"cardElevation\"&gt;2dp&lt;/item&gt;\n    &lt;item name=\"contentPaddingBottom\"&gt;24dp&lt;/item&gt;\n    &lt;item name=\"contentPaddingTop\"&gt;24dp&lt;/item&gt;\n    &lt;item name=\"contentPaddingLeft\"&gt;16dp&lt;/item&gt;\n    &lt;item name=\"contentPaddingRight\"&gt;16dp&lt;/item&gt;\n    &lt;item name=\"cardBackgroundColor\"&gt;@color/indigo&lt;/item&gt;\n&lt;/style&gt;\n</code></pre> <p>II. \u8bbe\u7f6e\u4f60\u7684 CardView \u7684 <code>style</code> \u5c5e\u6027\u503c\u4e3a\u81ea\u5b9a\u4e49\u7684\u6837\u5f0f\u3002</p> <pre><code>&lt;android.support.v7.widget.CardView\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    style=\"@style/MyCardViewStyle\"&gt;\n</code></pre> <p>\u7ffb\u8bd1\u6c34\u5e73\u6709\u9650\uff0c\u6b22\u8fce\u6279\u8bc4\u6307\u6b63</p> <p>\u539f\u6587\u94fe\u63a5 https://materialdoc.com/components/cards/</p>"},{"location":"components/dialogs/","title":"Dialogs","text":""},{"location":"components/dialogs/#alerts","title":"Alerts","text":"<p>\u6458\u81ea Google material design \u6587\u6863</p> <p>Alerts \u7528\u5728\u9700\u8981\u544a\u77e5\u7528\u6237\u4e00\u4e9b\u60c5\u51b5\u4fe1\u606f\u7684\u65f6\u5019\uff0c\u662f\u4e00\u79cd\u7d27\u6025\u4e2d\u65ad\uff0c\u9700\u8981\u7528\u6237\u786e\u8ba4\u64cd\u4f5c\u3002</p>"},{"location":"components/dialogs/#_1","title":"\u5982\u4f55\u6dfb\u52a0\uff1f","text":"<p>I. \u5728\u4f60\u7684 <code>build.gradle</code> \u6dfb\u52a0\u6700\u65b0\u7248\u672c\u7684 <code>appcompat</code> \u5e93\u3002</p> <pre><code>dependencies {\n    compile 'com.android.support:appcompat-v7:X.X.X' // where X.X.X version\n}\n</code></pre> <p>II. \u4f7f\u4f60\u7684 Activity \u7ee7\u627f\u81ea <code>android.support.v7.app.AppCompatActivity</code> \u3002</p> <pre><code>public class MainActivity extends AppCompatActivity {\n    ...\n}\n</code></pre> <p>III. \u7528 <code>android.support.v7.app.AlertDialog.Builder</code> \u521b\u5efa\u4f60\u7684 dialog \u3002</p> <pre><code>private void showLocationDialog() {\n    AlertDialog.Builder builder = new AlertDialog.Builder(MainActivity.this);\n    builder.setTitle(getString(R.string.dialog_title));\n    builder.setMessage(getString(R.string.dialog_message));\n\n    String positiveText = getString(android.R.string.ok);\n    builder.setPositiveButton(positiveText,\n            new DialogInterface.OnClickListener() {\n        @Override\n        public void onClick(DialogInterface dialog, int which) {\n            // positive button logic\n        }\n    });\n\n    String negativeText = getString(android.R.string.cancel);\n    builder.setNegativeButton(negativeText,\n            new DialogInterface.OnClickListener() {\n        @Override\n        public void onClick(DialogInterface dialog, int which) {\n            // negative button logic\n        }\n    });\n\n    AlertDialog dialog = builder.create();\n    // display dialog\n    dialog.show();\n}\n</code></pre>"},{"location":"components/dialogs/#_2","title":"\u5982\u4f55\u8bbe\u7f6e\u6837\u5f0f","text":"<p>I. \u7ed9 dialog \u80cc\u666f\u58f0\u660e\u81ea\u5b9a\u4e49\u7684 <code>drawable.xml</code> \u3002</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;!-- From: support/v7/appcompat/res/drawable/abc_dialog_material_background_light.xml --&gt;\n&lt;inset xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:insetLeft=\"16dp\"\n    android:insetTop=\"16dp\"\n    android:insetRight=\"16dp\"\n    android:insetBottom=\"16dp\"&gt;\n\n    &lt;shape android:shape=\"rectangle\"&gt;\n        &lt;corners android:radius=\"2dp\" /&gt;\n        &lt;solid android:color=\"@color/indigo\" /&gt;\n    &lt;/shape&gt;\n\n&lt;/inset&gt;\n</code></pre> <p>II. \u5728 <code>styles.xml</code> \u91cc\u58f0\u660e\u81ea\u5b9a\u4e49\u7684\u6837\u5f0f\u3002</p> <pre><code>&lt;style name=\"MyDialogTheme\" parent=\"Theme.AppCompat.Light.Dialog.Alert\"&gt;\n    &lt;!--buttons color--&gt;\n    &lt;item name=\"colorAccent\"&gt;@color/pink&lt;/item&gt;\n    &lt;!--title and message color--&gt;\n    &lt;item name=\"android:textColorPrimary\"&gt;@android:color/white&lt;/item&gt;\n    &lt;!--dialog background--&gt;\n    &lt;item name=\"android:windowBackground\"&gt;@drawable/background_dialog&lt;/item&gt;\n&lt;/style&gt;\n</code></pre> <p>III. \u628a\u4e0a\u9762\u5b9a\u4e49\u7684 <code>style</code> \u6837\u5f0f\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165 <code>AlertDialog.Builder</code> \u6765\u521b\u5efa dialog \u3002</p> <pre><code>AlertDialog.Builder builder = new AlertDialog.Builder(this, R.style.MyDialogTheme);\n...\nAlertDialog dialog = builder.create();\n// display dialog\ndialog.show();\n</code></pre> <p>\u5907\u6ce8</p> <p>\u4f60\u540c\u6837\u53ef\u4ee5\u5728\u4f60\u7684 activity theme \u91cc\u901a\u8fc7 <code>alertDialogTheme</code> \u5c5e\u6027\u8bbe\u7f6e dialog \u7684\u6837\u5f0f\u3002</p>"},{"location":"components/dialogs/#confirmation-dialogs","title":"Confirmation Dialogs","text":"<p>\u6458\u81ea Google material design \u6587\u6863</p> <p>\u786e\u8ba4 dialogs \u9700\u8981\u7528\u6237\u5728\u63d0\u4ea4\u4e4b\u524d\u660e\u786e\u7684\u786e\u8ba4\u4ed6\u4eec\u9009\u62e9\u7684\u9009\u9879\u3002\u4f8b\u5982\uff0c\u7528\u6237\u53ef\u4ee5\u8bd5\u542c\u591a\u4e2a\u94c3\u58f0\uff0c\u4f46\u662f\u53ea\u6709\u70b9\u51fb \u201c\u786e\u5b9a\u201d \u624d\u662f\u6700\u7ec8\u9009\u62e9\u3002</p> <p>\u5728\u786e\u8ba4 dialogs \u4e2d\u70b9\u51fb \u201c\u53d6\u6d88\u201d \u6216\u8005\u6309\u4e0b\u8fd4\u56de\u952e\u4f1a\u53d6\u6d88\u4e00\u4e2a\u52a8\u4f5c\uff0c\u4e22\u5f03\u4efb\u4f55\u6539\u52a8\u548c\u5173\u95ed dialogs \u3002</p>"},{"location":"components/dialogs/#_3","title":"\u5982\u4f55\u6dfb\u52a0?","text":"<p>I. \u5728\u4f60\u7684 <code>build.grade</code> \u6587\u4ef6\u91cc\u6dfb\u52a0\u6700\u65b0\u7248\u672c\u7684 <code>appcompat</code> \u5e93\u3002</p> <pre><code>dependencies {\n    compile 'com.android.support:appcompat-v7:X.X.X' // where X.X.X version\n}\n</code></pre> <p>II.\u4f7f\u4f60\u7684 activity \u7ee7\u627f\u81ea <code>android.support.v7.app.AppCompatActivity</code>.</p> <pre><code>public class MainActivity extends AppCompatActivity {\n    ...\n}\n</code></pre> <p>III. \u4f7f\u7528 <code>android.support.v7.app.AlertDialog.Builder</code> \u521b\u5efa dialogs \u3002</p>"},{"location":"components/dialogs/#dialogs_1","title":"\u5355\u9009 dialogs","text":"<p>\u5728\u4f60\u7684 <code>builder</code> \u5bf9\u8c61\u4e0a\u4f7f\u7528 <code>setSingleChoiceItems</code> \u65b9\u6cd5\u521b\u5efa\u4e00\u4e2a\u5355\u9009\u5217\u8868 dialogs \u3002</p> <pre><code>public void showDialog() {\n    AlertDialog.Builder builder = new AlertDialog.Builder(MainActivity.this);\n    builder.setTitle(R.string.dialog_title);\n\n    //list of items\n    String[] items = getResources().getStringArray(R.array.ringtone_list);\n    builder.setSingleChoiceItems(items, 0,\n            new DialogInterface.OnClickListener() {\n        @Override\n        public void onClick(DialogInterface dialog, int which) {\n            // item selected logic\n        }\n    });\n\n    String positiveText = getString(android.R.string.ok);\n    builder.setPositiveButton(positiveText,\n            new DialogInterface.OnClickListener() {\n        @Override\n        public void onClick(DialogInterface dialog, int which) {\n            // positive button logic\n        }\n    });\n\n    String negativeText = getString(android.R.string.cancel);\n    builder.setNegativeButton(negativeText,\n            new DialogInterface.OnClickListener() {\n        @Override\n        public void onClick(DialogInterface dialog, int which) {\n            // negative button logic\n        }\n    });\n\n    AlertDialog dialog = builder.create();\n    // display dialog\n    dialog.show();\n}\n</code></pre>"},{"location":"components/dialogs/#dialogs_2","title":"\u591a\u9009 dialogs","text":"<p>\u5728\u4f60\u7684 <code>builder</code> \u5bf9\u8c61\u4e0a\u4f7f\u7528 <code>setMultiChoiceItems</code> \u65b9\u6cd5\u521b\u5efa\u4e00\u4e2a\u591a\u9009\u5217\u8868 dialogs \u3002</p> <pre><code>builder.setMultiChoiceItems(items, selectedItemsArray,\n        new DialogInterface.OnMultiChoiceClickListener() {\n    @Override\n    public void onClick(DialogInterface dialog, int which, boolean isChecked) {\n        //item checked logic\n    }\n});\n</code></pre>"},{"location":"components/dialogs/#_4","title":"\u5982\u4f55\u8bbe\u7f6e\u6837\u5f0f\uff1f","text":"<p>I. \u58f0\u660e\u81ea\u5b9a\u4e49\u7684 dialogs \u80cc\u666f <code>drawable.xml</code></p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;!-- From: support/v7/appcompat/res/drawable/abc_dialog_material_background_light.xml --&gt;\n&lt;inset xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:insetLeft=\"16dp\"\n    android:insetTop=\"16dp\"\n    android:insetRight=\"16dp\"\n    android:insetBottom=\"16dp\"&gt;\n\n    &lt;shape android:shape=\"rectangle\"&gt;\n        &lt;corners android:radius=\"2dp\" /&gt;\n        &lt;solid android:color=\"@color/indigo\" /&gt;\n    &lt;/shape&gt;\n\n&lt;/inset&gt;\n</code></pre> <p>II. \u5728\u4f60\u7684 <code>styles.xml</code> \u6587\u4ef6\u91cc\u58f0\u660e\u81ea\u5b9a\u4e49\u6837\u5f0f\u3002</p> <pre><code>&lt;style name=\"MyDialogTheme\" parent=\"Theme.AppCompat.Light.Dialog.Alert\"&gt;\n    &lt;!--item RadioButton or CheckBox color--&gt;\n    &lt;item name=\"colorControlNormal\"&gt;@android:color/white&lt;/item&gt;\n    &lt;item name=\"colorControlActivated\"&gt;@color/pink&lt;/item&gt;\n    &lt;!--item text color--&gt;\n    &lt;item name=\"textColorAlertDialogListItem\"&gt;@android:color/white&lt;/item&gt;\n    &lt;!--buttons color--&gt;\n    &lt;item name=\"colorAccent\"&gt;@color/pink&lt;/item&gt;\n    &lt;!--title and message color--&gt;\n    &lt;item name=\"android:textColorPrimary\"&gt;@android:color/white&lt;/item&gt;\n    &lt;!--dialog background--&gt;\n    &lt;item name=\"android:windowBackground\"&gt;@drawable/background_dialog&lt;/item&gt;\n&lt;/style&gt;\n</code></pre> <p>III. \u4f7f\u7528\u6837\u5f0f\u4f5c\u4e3a <code>AlertDialog.Builder</code> \u7684\u53c2\u6570\u6765\u521b\u5efa\u4f60\u7684 dialogs \u3002</p> <pre><code>AlertDialog.Builder builder =\n        new AlertDialog.Builder(this, R.style.MyDialogTheme);\n...\nAlertDialog dialog = builder.create();\n// display dialog\ndialog.show();\n</code></pre> <p>\u7ffb\u8bd1\u6c34\u5e73\u6709\u9650\uff0c\u6b22\u8fce\u6279\u8bc4\u6307\u6b63</p> <p>\u539f\u6587\u4f5c\u8005\uff1aVolodymyr Yatsykiv \u539f\u6587\u5730\u5740\uff1aDialogs</p>"},{"location":"components/fab/","title":"Floating Action Button","text":"<p>\u6458\u81ea\u8c37\u6b4c\u5b98\u65b9\u7684 Material Design \u6587\u6863</p> <p>FAB \u7528\u4e8e\u4e3b\u8981\u7684\u529f\u80fd\u6309\u94ae\u3002FAB \u662f\u4e00\u4e2a\u6f02\u6d6e\u5728 UI \u4e4b\u4e0a\u7684\u5706\u5f62\u56fe\u6807\uff0c\u5e76\u4e14\u5f53\u70b9\u51fb\u8be5\u6309\u94ae\u7684\u65f6\u5019\uff0c\u901a\u5e38\u5177\u6709 \u53d8\u5f62\u3001\u4f4d\u79fb \u7b49\u52a8\u753b\u6548\u679c\u3002</p>"},{"location":"components/fab/#_1","title":"\u5982\u4f55\u6dfb\u52a0\uff1f","text":"<p>I. \u5728 <code>build.gradle</code> \u4e2d\u6dfb\u52a0\u6700\u65b0\u7684 <code>appcompat</code> \u548c<code>design</code> \u5e93\u3002</p> <pre><code>dependencies {\n    compile 'com.android.support:appcompat-v7:X.X.X' // where X.X.X version\n    compile 'com.android.support:design:X.X.X' // where X.X.X version\n}\n</code></pre> <p>II. \u7ee7\u627f\u81f3 <code>android.support.v7.app.AppCompatActivity</code> Activity\u3002</p> <p>\u8ba9\u4f60\u7684 Activity \u7ee7\u627f\u81ea android.support.v7.app.AppCompatActivity \u3002</p> <pre><code>public class MainActivity extends AppCompatActivity {\n    ...\n}\n</code></pre> <p>III. \u5728 <code>layout.xml</code> \u5e03\u5c40\u6587\u4ef6\u4e2d\u4f7f\u7528 <code>FloatingActionButton</code>\u3002</p> <p>```prettyprint lang-xml  <pre><code>### \u5982\u4f55\u4fee\u6539\u6837\u5f0f\n\n![Mini FAB](https://materialdoc.com/images/device-2016-01-02-153733.png)\n\n#### \u80cc\u666f\u989c\u8272\n\nI. \u5728 values/styles.xml \u4e2d\u5b9a\u4e49\u4e00\u4e2a style\u3002\n\n```xml\n&lt;style name=\"MyFloatingButton\" parent=\"Theme.AppCompat.Light\"&gt;\n    &lt;item name=\"colorAccent\"&gt;@color/pink&lt;/item&gt;\n&lt;/style&gt;\n</code></pre></p> <p>II. \u901a\u8fc7 <code>android:theme</code> \u5c5e\u6027\u5728 <code>FloatingActionButton</code> \u4e0a\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684 style\u3002</p> <pre><code>&lt;android.support.design.widget.FloatingActionButton\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:src=\"@drawable/ic_call\"\n    android:theme=\"@style/MyFloatingButton\" /&gt;\n</code></pre>"},{"location":"components/fab/#ripple","title":"Ripple \u6548\u679c\u989c\u8272","text":"<p>\u4f7f\u7528 <code>app:rippleColor</code> \u5c5e\u6027\u6765\u4fee\u6539\u5f53\u70b9\u51fb <code>FloatingActionButton</code> \u65f6\u5019\u7684 \u6c34\u6ce2\u7eb9 \u7684\u989c\u8272\u3002</p> <pre><code>&lt;android.support.design.widget.FloatingActionButton\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:src=\"@drawable/ic_call\"\n    app:rippleColor=\"@color/indigo\" /&gt;\n</code></pre>"},{"location":"components/fab/#_2","title":"\u56fe\u6807","text":"<p>\u4f7f\u7528 <code>android:src</code> \u6765\u6307\u5b9a <code>FloatingActionButton</code> \u7684\u56fe\u6807\u3002</p> <pre><code>&lt;android.support.design.widget.FloatingActionButton\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:src=\"@drawable/ic_favorite\"/&gt;\n</code></pre>"},{"location":"components/fab/#_3","title":"\u5927\u5c0f","text":"<p>\u5728\u8c37\u6b4c\u5b98\u65b9\u7684 Material Deisgn \u6587\u6863</p> <p>FAB \u6709\u4e24\u79cd\u5c3a\u5bf8\uff1a * \u9ed8\u8ba4\u5c3a\u5bf8\uff1a\u9002\u5408\u5927\u90e8\u5206\u60c5\u51b5 * \u8ff7\u4f60\u5c3a\u5bf8\uff1a\u5f53\u9ed8\u8ba4\u5c3a\u5bf8\u548c\u5f53\u524d UI \u7684\u5176\u4ed6\u5143\u7d20\u4e0d\u534f\u8c03\u7684\u65f6\u5019\u4f7f\u7528\u8ff7\u4f60\u5c3a\u5bf8</p> <p>\u4f7f\u7528 <code>app:fabSize</code>  \u6765\u4fee\u6539 <code>FloatingActionButton</code> \u7684\u5927\u5c0f\uff0c\u5176\u53d6\u503c\u4e3a\u9884\u8bbe\u7684\u4e24\u4e2a\u5e38\u91cf\uff1a <code>mini</code> \u6216\u8005 <code>normal</code>\u3002</p> <pre><code>&lt;android.support.design.widget.FloatingActionButton\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:src=\"@drawable/ic_mini\"\n    app:fabSize=\"mini\"/&gt;\n</code></pre> <p>\u7ffb\u8bd1\u6c34\u5e73\u6709\u9650\uff0c\u6b22\u8fce\u6279\u8bc4\u6307\u6b63</p> <p>\u539f\u6587\u4f5c\u8005\uff1aParesh Mayani \u539f\u6587\u5730\u5740\uff1aFab \u8bd1\u8005\uff1aGoodev \u6821\u5bf9\uff1aAilurus</p>"},{"location":"components/menus/","title":"Menus","text":"<p>From the google material design documentation</p> <p>Menus allow users to take an action by selecting from a list of choices revealed upon opening a temporary, new sheet of material.</p>"},{"location":"components/menus/#how-to-add","title":"How to add?","text":"<p>I. In your <code>build.gradle</code> add latest <code>appcompat</code> library.</p> <pre><code>dependencies {\n    compile 'com.android.support:appcompat-v7:X.X.X'\n    // where X.X.X version\n}\n</code></pre> <p>II. Make your activity extend <code>android.support.v7.app.AppCompatActivity</code>.</p> <pre><code>public class MyActivity extends AppCompatActivity {\n   ...\n}\n</code></pre> <p>III. Create a menu file inside the <code>res/menu</code> folder with some items on it.</p> <pre><code>&lt;menu xmlns:android=\"http://schemas.android.com/apk/res/android\"\n      xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n      xmlns:tools=\"http://schemas.android.com/tools\"\n      tools:context=\"com.example.saulmm.myapplication.MainActivity\"&gt;\n\n    &lt;item\n        android:id=\"@+id/action_refresh\"\n        android:title=\"@string/action_refresh\"\n        app:showAsAction=\"never\"/&gt;\n\n    &lt;item\n        android:id=\"@+id/action_feedback\"\n        android:title=\"@string/action_feedback\"\n        app:showAsAction=\"never\"/&gt;\n\n    &lt;item\n        android:id=\"@+id/action_settings\"\n        android:title=\"@string/action_settings\"\n        app:showAsAction=\"never\"/&gt;\n\n    &lt;item\n        android:id=\"@+id/action_leave\"\n        android:title=\"@string/action_leave\"\n        app:showAsAction=\"never\"/&gt;\n&lt;/menu&gt;\n</code></pre> <p>IV. Override activity <code>onCreateOptionsMenu</code> method and inflate menu resource.</p> <pre><code>@Override\npublic boolean onCreateOptionsMenu(Menu menu) {\n    getMenuInflater().inflate(R.menu.menu_main, menu);\n    return true;\n}\n</code></pre>"},{"location":"components/menus/#how-to-style","title":"How to style?","text":"<p>I. Declare a custom style extending the <code>ThemeOverlay.AppCompat.Dark</code> theme in your <code>style.xml</code> file.</p> <pre><code>&lt;style name=\"MyPopupTheme\" parent=\"ThemeOverlay.AppCompat.Dark\"&gt;\n    &lt;item name=\"android:colorControlActivated\"&gt;@color/red &lt;/item&gt;\n    &lt;item name=\"android:colorControlHighlight\"&gt;@color/red&lt;/item&gt;\n    &lt;item name=\"android:colorControlNormal\"&gt;@color/yellow&lt;/item&gt;\n    &lt;item name=\"android:textColorPrimary\"&gt;@color/yellow&lt;/item&gt;\n&lt;/style&gt;\n</code></pre> <p>II. Apply this style to your <code>Toolbar</code> via <code>app:popupTheme</code>.</p> <pre><code>&lt;android.support.v7.widget.Toolbar\n    android:id=\"@+id/toolbar\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"?attr/actionBarSize\"\n    app:popupTheme=\"@style/MyPopupTheme\" /&gt;\n</code></pre>"},{"location":"components/pickers/","title":"Pickers","text":""},{"location":"components/pickers/#date-picker","title":"Date Picker","text":"<p>\u6458\u81ea Google Material Design \u6587\u6863</p> <p>\u5bf9\u8bdd\u6846\u9009\u62e9\u5668\u7528\u6765\u5728\u624b\u673a\u4e0a\u9009\u62e9\u65e5\u671f\u3002 \u88ab\u9009\u4e2d\u7684\u4e00\u5929\uff0c\u7528\u4e0e\u5176\u4ed6\u65e5\u671f\u4e0d\u540c\u7684\u989c\u8272\u548c\u7740\u91cd\u7c7b\u578b\u7684\u5b9e\u5fc3\u5706\u6765\u8868\u793a\u3002</p>"},{"location":"components/pickers/#_1","title":"\u5982\u4f55\u6dfb\u52a0\uff1f","text":"<p>I. \u5728 <code>build.gradle</code> \u91cc\u6dfb\u52a0\u6700\u65b0\u7684 <code>appcompat</code> \u5e93\u3002</p> <pre><code>dependencies {\n    compile 'com.android.support:appcompat-v7:X.X.X' // where X.X.X version\n}\n</code></pre> <p>II. \u8ba9\u4f60\u7684 Activity \u7ee7\u627f\u81ea <code>android.support.v7.app.AppCompatActivity</code> \u5e76\u5b9e\u73b0 <code>DatePickerDialog.OnDateSetListener</code> \u63a5\u53e3\u3002 <pre><code>public class MainActivity extends AppCompatActivity\n    implements DatePickerDialog.OnDateSetListener {\n</code></pre></p> <p>III. \u521b\u5efa\u4f60\u7684 <code>DatePickerDialog</code> \uff0c\u5e76\u4f20\u5165 context, listener, startYear, starthMonth, startDay \u7b49\u53c2\u6570\u3002 <pre><code>DatePickerDialog datePickerDialog = new DatePickerDialog(\n    context, listener, startYear, starthMonth, startDay);\n</code></pre> IV. \u4f7f\u7528 <code>DatePickerDialog</code> \u7684 <code>show</code> \u65b9\u6cd5\u5c55\u793a\u5bf9\u8bdd\u6846\u3002 <pre><code>datePickerDialog.show();\n</code></pre></p>"},{"location":"components/pickers/#_2","title":"\u5982\u4f55\u8bbe\u7f6e\u6837\u5f0f\uff1f","text":"<p>I. \u4e3a\u5bf9\u8bdd\u6846\u80cc\u666f\u58f0\u660e\u81ea\u5b9a\u4e49 <code>drawable.xml</code> \u3002</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;!-- From: support/v7/appcompat/res/drawable/abc_dialog_material_background_light.xml --&gt;\n&lt;inset xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:insetLeft=\"16dp\"\n    android:insetTop=\"16dp\"\n    android:insetRight=\"16dp\"\n    android:insetBottom=\"16dp\"&gt;\n\n    &lt;shape android:shape=\"rectangle\"&gt;\n        &lt;corners android:radius=\"2dp\" /&gt;\n        &lt;solid android:color=\"@color/indigo\" /&gt;\n    &lt;/shape&gt;\n\n&lt;/inset&gt;\n</code></pre> <p>II. \u5728 <code>styles.xml</code> \u58f0\u660e\u81ea\u5b9a\u4e49\u6837\u5f0f\u3002 <pre><code>&lt;style name=\"MyDialogTheme\" parent=\"Theme.AppCompat.Light.Dialog.Alert\"&gt;\n    &lt;item name=\"colorControlNormal\"&gt;@android:color/white&lt;/item&gt;\n    &lt;item name=\"colorControlActivated\"&gt;@color/pink&lt;/item&gt;\n    &lt;item name=\"textColorAlertDialogListItem\"&gt;@android:color/white&lt;/item&gt;\n    &lt;item name=\"colorAccent\"&gt;@color/pink&lt;/item&gt;\n    &lt;item name=\"android:textColorPrimary\"&gt;@android:color/white&lt;/item&gt;\n    &lt;item name=\"android:windowBackground\"&gt;@drawable/background_dialog&lt;/item&gt;\n&lt;/style&gt;\n</code></pre></p> <p>III. \u8bbe\u7f6e\u4f60\u7684\u81ea\u5b9a\u4e49\u6837\u5f0f\u4e3a <code>DatePickerDialog</code> \u7684\u4e00\u4e2a\u53c2\u6570\u3002 <pre><code>DatePickerDialog datePickerDialog = new DatePickerDialog(\n    this, R.style.MyDialogTheme, listener, 2016, 21, 3);\n</code></pre> IV. \u4f7f\u7528 <code>show</code> \u65b9\u6cd5\u5c55\u793a\u4f60\u7684 <code>DatePickerDialog</code> \u3002 <pre><code>datePickerDialog.show();\n</code></pre></p>"},{"location":"components/pickers/#time-picker","title":"Time Picker","text":"<p>\u6458\u81ea Google Material Design \u6587\u6863</p> <p>\u4e00\u4e2a\u65f6\u95f4\u9009\u62e9\u5668\u6839\u636e\u7528\u6237\u7684\u9996\u9009\u65f6\u95f4\u8bbe\u7f6e\uff08\u537312\u5c0f\u65f6\u621624\u5c0f\u65f6\u683c\u5f0f\uff09\u8fdb\u884c\u8c03\u6574\u3002 \u5bf9\u8bdd\u6846\u9009\u62e9\u5668\u7528\u4e8e\u5728\u79fb\u52a8\u8bbe\u5907\u4e0a\u9009\u62e9\u4e00\u6b21\uff08\u5c0f\u65f6\uff1a\u5206\u949f\uff09\u3002</p>"},{"location":"components/pickers/#_3","title":"\u5982\u4f55\u6dfb\u52a0?","text":"<p>I. \u5728\u4f60\u7684 <code>build.gradle</code> \u6587\u4ef6\u91cc\u6dfb\u52a0\u6700\u65b0\u7248\u672c\u7684 <code>appcompat</code> \u5e93\u3002</p> <pre><code>dependencies {\n    compile 'com.android.support:appcompat-v7:X.X.X' // where X.X.X version\n}\n</code></pre> <p>II. \u8ba9\u4f60\u7684 activity \u7ee7\u627f\u81ea <code>android.support.v7.app.AppCompatActivity</code> \u5e76\u4e14\u5b9e\u73b0  <code>TimePickerDialog.OnTimeSetListener</code> \u63a5\u53e3\u3002</p> <pre><code>public class MainActivity extends AppCompatActivity\n    implements TimePickerDialog.OnTimeSetListener {\n      ...\n    }\n</code></pre> <p>III. \u521b\u5efa\u4f60\u7684 <code>TimePickerDialog</code> \u5e76\u8bbe\u7f6e context\uff0c\u76d1\u542c\u5668\u7684\u5b9e\u73b0\uff0c\u4e00\u5929\u7684\u5f00\u59cb\u65f6\u95f4\uff0c\u5206\u949f\u548c\u4e00\u4e2a <code>boolean</code> \u503c\uff0c\u6307\u793a\u5bf9\u8bdd\u6846\u662f\u5426\u663e\u793a\u4e3a 24 \u5c0f\u65f6\u683c\u5f0f\u3002</p> <pre><code>TimePickerDialog timePickerDialog =\n    new TimePickerDialog(context, listener, startHour, startMinute, is24HourFormat);\n</code></pre> <p>IV. \u901a\u8fc7 <code>TimePickerDialog</code> \u7684 <code>show</code> \u65b9\u6cd5\u663e\u793a\u4f60\u7684\u5bf9\u8bdd\u6846\u3002</p> <pre><code>timePickerDialog.show();\n</code></pre>"},{"location":"components/pickers/#_4","title":"\u5982\u4f55\u8bbe\u7f6e\u6837\u5f0f?","text":"<p>I. \u521b\u5efa\u5bf9\u8bdd\u6846\u81ea\u5b9a\u4e49\u80cc\u666f\u6587\u4ef6 <code>drawable.xml</code>\u3002</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;!-- From: support/v7/appcompat/res/drawable/abc_dialog_material_background_light.xml --&gt;\n&lt;inset xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:insetLeft=\"16dp\"\n    android:insetTop=\"16dp\"\n    android:insetRight=\"16dp\"\n    android:insetBottom=\"16dp\"&gt;\n\n    &lt;shape android:shape=\"rectangle\"&gt;\n        &lt;corners android:radius=\"2dp\" /&gt;\n        &lt;solid android:color=\"@color/indigo\" /&gt;\n    &lt;/shape&gt;\n\n&lt;/inset&gt;\n</code></pre> <p>II. \u5728<code>styles.xml</code> \u6587\u4ef6\u5185\u6dfb\u52a0\u4f60\u7684\u81ea\u5b9a\u4e49\u6837\u5f0f\u3002</p> <pre><code>    &lt;style name=\"MyDialogTheme\" parent=\"Theme.AppCompat.Light.Dialog.Alert\"&gt;\n        &lt;item name=\"colorControlNormal\"&gt;@color/indigo&lt;/item&gt;\n        &lt;item name=\"colorControlActivated\"&gt;@color/pink&lt;/item&gt;\n        &lt;item name=\"textColorAlertDialogListItem\"&gt;@color/indigo&lt;/item&gt;\n        &lt;item name=\"colorAccent\"&gt;@color/pink&lt;/item&gt;\n        &lt;item name=\"android:textColorPrimary\"&gt;@color/indigo&lt;/item&gt;\n        &lt;item name=\"android:windowBackground\"&gt;@drawable/background_dialog&lt;/item&gt;\n    &lt;/style&gt;\n</code></pre> <p>III. \u5c06\u4f60\u7684\u81ea\u5b9a\u4e49\u4f5c\u4e3a\u521b\u5efa <code>DatePickerDialog</code> \u65f6\u7684\u4e00\u4e2a\u53c2\u6570\u3002</p> <pre><code>TimePickerDialog timePickerDialog = new TimePickerDialog(\n    context, R.style.MyDialogTheme, listener,\n    startHour, startMinute, is24HourFormat);\n</code></pre> <p>IV. \u901a\u8fc7 <code>show</code> \u65b9\u6cd5\u6765\u663e\u793a\u4f60\u7684 <code>TimePickerDialog</code>\u3002</p> <pre><code>timePickerDialog.show();\n</code></pre>"},{"location":"components/pickers/#dark-theme","title":"Dark theme","text":"<p>I. \u4f7f\u7528 <code>R.style.Theme_AppCompat_Dialog_Alert</code> \u4e3b\u9898\u4f5c\u4e3a<code>TimePickerDialog</code> \u6784\u9020\u51fd\u6570\u7684\u6837\u5f0f\u53c2\u6570\u3002</p> <pre><code>TimePickerDialog dialog = new TimePickerDialog(\n    context, R.style.Theme_AppCompat_Dialog_Alert,\n    listener, startingHour, startingMinute, is24HourFormat);\n</code></pre> <p>\u5907\u6ce8</p> <p>\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u7ee7\u627f\u81ea <code>Theme.AppCompat.Light.Dialog.Alert</code> \u7684\u81ea\u5b9a\u4e49\u6837\u5f0f\u3002</p>"},{"location":"components/pickers/#color-picker","title":"Color Picker","text":"<p>\u6458\u81ea Google material design \u6587\u6863.</p> <p>Pickers \u63d0\u4f9b\u4e86\u4e00\u79cd\u4ece\u9884\u5148\u786e\u5b9a\u7684\u96c6\u5408\u4e2d\u9009\u62e9\u5355\u4e2a\u503c\u7684\u7b80\u5355\u65b9\u6cd5\u3002</p>"},{"location":"components/pickers/#_5","title":"\u5982\u4f55\u63d0\u6dfb\u52a0?","text":"<p>I. \u4ece Google open source repository \u514b\u9686 color picker \u9879\u76ee\u3002</p> <pre><code>git clone https://android.googlesource.com/platform/frameworks/opt/colorpicker\n</code></pre> <p>II. \u9009\u62e9\u5df2\u7ecf\u514b\u9686\u7684\u9879\u76ee\u5e76\u4f5c\u4e3a\u4e00\u4e2a\u65b0\u6a21\u5757\u901a\u8fc7 New/Import module \u83dc\u5355\u5bfc\u5165\u5230 Android Studio\u3002</p> <p>III. \u5c06\u65b0\u6a21\u5757\u7f16\u8bd1\u4e3a\u4f60\u9879\u76ee\u7684\u4e00\u4e2a\u4f9d\u8d56\u3002</p> <pre><code>dependencies {\n    compile project(':colorpicker')\n}\n</code></pre> <p>IV. \u5728 <code>colors.xml</code> \u8d44\u6e90\u6587\u4ef6\u4e2d\u58f0\u660e\u4e00\u4e9b\u989c\u8272\u3002</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;resources&gt;\n    &lt;color name=\"red\"&gt;#F6402C&lt;/color&gt;\n    &lt;color name=\"pink\"&gt;#EB1460&lt;/color&gt;\n    &lt;color name=\"purple\"&gt;#9C1AB1&lt;/color&gt;\n    &lt;color name=\"deep_purple\"&gt;#6633B9&lt;/color&gt;\n    &lt;color name=\"indigo\"&gt;#3D4DB7&lt;/color&gt;\n    &lt;color name=\"blue\"&gt;#1093F5&lt;/color&gt;\n    &lt;color name=\"light_blue\"&gt;#00A6F6&lt;/color&gt;\n    &lt;color name=\"cyan\"&gt;#00BBD5&lt;/color&gt;\n    &lt;color name=\"teal\"&gt;#009687&lt;/color&gt;\n    &lt;color name=\"green\"&gt;#46AF4A&lt;/color&gt;\n    &lt;color name=\"light_green\"&gt;#88C440&lt;/color&gt;\n    &lt;color name=\"lime\"&gt;#CCDD1E&lt;/color&gt;\n    &lt;color name=\"yellow\"&gt;#FFEC16&lt;/color&gt;\n    &lt;color name=\"amber\"&gt;#FFC100&lt;/color&gt;\n    &lt;color name=\"orange\"&gt;#FF9800&lt;/color&gt;\n    &lt;color name=\"deep_orange\"&gt;#FF5505&lt;/color&gt;\n    &lt;color name=\"brown\"&gt;#7A5547&lt;/color&gt;\n    &lt;color name=\"grey\"&gt;#9D9D9D&lt;/color&gt;\n    &lt;color name=\"blue_grey\"&gt;#5E7C8B&lt;/color&gt;\n&lt;/resources&gt;\n</code></pre> <p>V. \u4f7f\u7528\u6807\u9898\u3001\u989c\u8272\u6570\u7ec4\u3001\u9ed8\u8ba4\u9009\u62e9\u7684\u989c\u8272\u3001\u5217\u6570\u548c\u663e\u793a\u989c\u8272\u7684\u5927\u5c0f\u6765\u521d\u59cb\u5316 <code>ColorPickerDialog</code>\u3002</p> <pre><code>ColorPickerDialog colorPickerDialog = new ColorPickerDialog();\ncolorPickerDialog.initialize(\n    R.string.title, colors, selectedColor, numColumns, colors.length);\n</code></pre> <p>VI. \u7531\u4e8e <code>ColorPickerDialog</code> \u7ee7\u627f\u81ea <code>DialogFragment</code> \uff0c\u6240\u4ee5\u53ef\u4ee5\u901a\u8fc7 \u4e00\u4e2a <code>FragmentManager</code> \u548c \u4e00\u4e2a\u6807\u7b7e\u663e\u793a\u5b83\u3002</p> <pre><code>colorPickerDialog.show(getFragmentManager(), tag);\n</code></pre>"},{"location":"components/pickers/#_6","title":"\u5982\u4f55\u8bbe\u7f6e\u6837\u5f0f?","text":"<p>I. \u521b\u5efa\u4e00\u4e2a\u5305\u542b <code>ColorPickerPalette</code> \u7684\u5e03\u5c40\u6587\u4ef6\u3002</p> <pre><code>&lt;com.android.colorpicker.ColorPickerPalette\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:id=\"@+id/palette\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:layout_gravity=\"center\"\n    android:gravity=\"center\"\n    android:padding=\"16dp\"\n    /&gt;\n</code></pre> <p>\u5907\u6ce8</p> <p><code>ColorPickerPalette</code> \u7ee7\u627f\u81ea <code>TableLayout</code> \u7c7b\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u4f7f\u7528  <code>TableLayout</code> \u7684\u6240\u6709\u89c6\u56fe\u5c5e\u6027\u6765\u8bbe\u7f6e\u81ea\u5df1\u7684\u6837\u5f0f\u3002</p> <p>II. \u4e3a\u5305\u542b <code>ColorPickerPalette</code> \u7684\u5bf9\u8bdd\u6846\u5b9a\u4e49\u4e00\u4e2a\u6697\u8272\u6837\u5f0f\u3002</p> <pre><code>&lt;style name=\"MyDialogTheme\" parent=\"Theme.AppCompat.Dialog.Alert\"&gt;\n    &lt;item name=\"colorAccent\"&gt;@color/teal_light&lt;/item&gt;\n    &lt;item name=\"android:textColorPrimary\"&gt;@android:color/white&lt;/item&gt;\n&lt;/style&gt;\n</code></pre> <p>III. Inflate your <code>ColorPickerPalette</code> in a view object.</p> <pre><code>LayoutInflater layoutInflater = LayoutInflater.from(context);\nColorPickerPalette colorPickerPalette =\n    (ColorPickerPalette) layoutInflater.inflate(R.layout.custom_picker, null);\n</code></pre> <p>IV. \u7528\u4e00\u4e9b\u989c\u8272\u548c\u4e00\u4e2a\u76d1\u542c\u5668\u8bbe\u7f6e\u4f60\u7684 <code>ColorPickerPalette</code>\u3002</p> <pre><code>colorPickerPalette.init(colors.length, columns, mOnColorSelectedListener);\n</code></pre> <p>V. \u4f7f\u7528\u4e00\u4e2a\u989c\u8272\u6570\u7ec4\u548c\u9ed8\u8ba4\u7684\u9009\u4e2d\u989c\u8272\u4f5c\u4e3a\u53c2\u6570\u8c03\u7528 <code>ColorPickerPalette</code> \u7684 <code>colorPickerPalette</code> \u65b9\u6cd5\u3002</p> <pre><code>colorPickerPalette.drawPalette(colors, selectedColor);\n</code></pre> <p>VI. \u7528\u4f60\u7684\u6697\u8272\u4e3b\u9898\u548c\u89c6\u56fe\u901a\u8fc7 <code>AlertDialog.Builder</code> \u521b\u5efa\u5bf9\u8bdd\u6846\u3002</p> <pre><code>AlertDialog alert = new AlertDialog.Builder(this, R.style.MyDialogTheme)\n    .setTitle(R.string.title_color_picker)\n    .setPositiveButton(android.R.string.ok, mOnClickListener)\n    .setNegativeButton(android.R.string.no, mOnClickListener)\n    .setView(colorPickerPalette)\n    .create();\n</code></pre> <p>VII. \u663e\u793a\u4f60\u7684\u5bf9\u8bdd\u6846</p> <pre><code>alert.show();\n</code></pre> <p>\u7ffb\u8bd1\u6c34\u5e73\u6709\u9650\uff0c\u6b22\u8fce\u6279\u8bc4\u6307\u6b63</p> <p>\u539f\u6587\u5730\u5740\uff1aPickers \u8bd1\u8005\uff1a\u8109\u8109\u4e0d\u5f97\u8bed \u8bd1\u8005\uff1aAilurus</p>"},{"location":"components/progress/","title":"Progress &amp; activity","text":""},{"location":"components/progress/#circular","title":"Circular","text":"<p>\u6458\u81ea google material design \u6587\u6863</p> <p>Minimize visual changes that occur while your app loads content by representing each operation with a single activity indicator. \u4f8b\u5982\uff0c\u4e00\u4e2a\u5237\u65b0\u64cd\u4f5c\u5e94\u8be5\u663e\u793a\u4e00\u4e2a refresh bar \u6216\u8005 activity circle \u7684\u4efb\u4f55\u4e00\u4e2a\uff0c\u4f46\u662f\u4e0d\u80fd\u540c\u65f6\u663e\u793a\u3002</p>"},{"location":"components/progress/#_1","title":"\u5982\u4f55\u6dfb\u52a0?","text":"<p>I. \u5728\u4f60\u7684 <code>build.grade</code> \u6587\u4ef6\u672b\u5c3e\u6dfb\u52a0 <code>appcompat</code> \u5e93\u3002</p> <pre><code>dependencies {\n    compile 'com.android.support:appcompat-v7:X.X.X' // where X.X.X version\n}\n</code></pre> <p>II. \u521b\u5efa\u4f60\u7684 activity \u5e76\u7ee7\u627f\u81ea android.support.v7.app.AppCompatActivity\u3002</p> <pre><code>public class MainActivity extends AppCompatActivity {\n    ...\n}\n</code></pre> <p>III. \u5728 <code>layout.xml</code> \u5185\u7684\u4efb\u610f\u4f4d\u7f6e\u58f0\u660e\u4f60\u7684 <code>ProgressBar</code>\u3002</p> <pre><code>&lt;ProgressBar\n    style=\"@style/Widget.AppCompat.ProgressBar\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"/&gt;\n</code></pre>"},{"location":"components/progress/#_2","title":"\u5982\u4f55\u8bbe\u7f6e\u6837\u5f0f?","text":"<p>I. \u5728\u4f60\u7684 <code>styles.xml</code> \u5185\u5b9a\u4e49\u81ea\u5b9a\u4e49\u6837\u5f0f\u3002</p> <pre><code>&lt;style name=\"CircularProgress\" parent=\"Theme.AppCompat.Light\"&gt;\n    &lt;item name=\"colorAccent\"&gt;@color/indigo&lt;/item&gt;\n&lt;/style&gt;\n</code></pre> <p>II. \u901a\u8fc7 <code>android:theme</code> \u5c5e\u6027\u5e94\u7528\u8fd9\u4e2a\u6837\u5f0f\u5230\u4f60\u7684 <code>ProgressBar</code> \u3002</p> <pre><code>&lt;ProgressBar\n    android:theme=\"@style/CircularProgress\"\n    style=\"@style/Widget.AppCompat.ProgressBar\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"/&gt;\n</code></pre>"},{"location":"components/progress/#linear","title":"Linear","text":"<p>\u6458\u81ea google material design \u6587\u6863</p> <p>\u4e00\u4e2a linear progress \u6307\u793a\u5668\u5e94\u8be5\u603b\u662f\u4ece 0% \u586b\u5145\u5230 100%\uff0c\u7edd\u5bf9\u4e0d\u80fd\u53cd\u7740\u586b\u5145\u3002 It should be represented by bars on the edge of a header or sheet that appear and disappear.</p>"},{"location":"components/progress/#_3","title":"\u5982\u4f55\u6dfb\u52a0?","text":"<p>I. \u5728\u4f60\u7684 <code>build.grade</code> \u6587\u4ef6\u672b\u5c3e\u6dfb\u52a0 <code>appcompat</code> \u5e93\u3002</p> <pre><code>dependencies {\n    compile 'com.android.support:appcompat-v7:X.X.X' // where X.X.X version\n}\n</code></pre> <p>II. \u521b\u5efa\u4f60\u7684 activity \u5e76\u7ee7\u627f\u81ea <code>android.support.v7.app.AppCompatActivity</code>\u3002</p> <pre><code>public class MainActivity extends AppCompatActivity {\n    ...\n}\n</code></pre> <p>III. \u5728 <code>layout.xml</code> \u5185\u7684\u4efb\u610f\u4f4d\u7f6e\u58f0\u660e\u4f60\u7684 <code>ProgressBar</code>\u3002</p> <pre><code>&lt;ProgressBar\n    style=\"@style/Widget.AppCompat.ProgressBar.Horizontal\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"/&gt;\n</code></pre>"},{"location":"components/progress/#_4","title":"\u4e0d\u786e\u5b9a\u7684","text":"<p>\u521b\u5efa\u4e0d\u786e\u5b9a\u7684 <code>ProgressBar</code> \u8bbe\u7f6e <code>android:indeterminate</code> \u5c5e\u6027\u7684\u503c\u4e3a true\u3002</p> <pre><code>&lt;ProgressBar\n    style=\"@style/Widget.AppCompat.ProgressBar.Horizontal\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:indeterminate=\"true\"/&gt;\n</code></pre>"},{"location":"components/progress/#_5","title":"\u786e\u5b9a\u7684","text":"<p>I. \u521b\u5efa\u786e\u5b9a\u7684 <code>ProgressBar</code> \u8bbe\u7f6e <code>android:indeterminate</code> \u5c5e\u6027\u7684\u503c\u4e3a false\u3002</p> <pre><code>&lt;ProgressBar\n    android:id=\"@+id/progressBar\"\n    style=\"@style/Widget.AppCompat.ProgressBar.Horizontal\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:indeterminate=\"false\"\n    android:max=\"100\"\n    android:progress=\"20\"/&gt;\n</code></pre> <p>\u4f7f\u7528 <code>android:max</code> \u5c5e\u6027\u53bb\u6307\u5b9a\u6700\u5927\u8fdb\u5ea6\u6570\u3002\u5b83\u9ed8\u8ba4\u7b49\u4e8e100\u3002</p> <p>\u4f7f\u7528 <code>android:progress</code> \u5c5e\u6027\u8bbe\u7f6e\u8fdb\u5ea6\u9ed8\u8ba4\u4f4d\u7f6e\u3002</p> <p>II. \u4ece UI \u7ebf\u7a0b\u4f7f\u7528 <code>setProgress(int progress)</code> \u65b9\u6cd5\u53bb\u66f4\u65b0\u8fdb\u5ea6\u4f4d\u7f6e\u3002</p> <pre><code>ProgressBar progressBar = (ProgressBar) findViewById(R.id.progressBar);\nprogressBar.setProgress(50);\n</code></pre>"},{"location":"components/progress/#_6","title":"\u7f13\u51b2\u7684","text":"<p>I. \u521b\u5efa\u7f13\u51b2\u7684 <code>ProgressBar</code> \u8bbe\u7f6e <code>android:indeterminate</code> \u5c5e\u6027\u7684\u503c\u4e3a false\u3002</p> <pre><code>&lt;ProgressBar\n    android:id=\"@+id/progressBar\"\n    style=\"@style/Widget.AppCompat.ProgressBar.Horizontal\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:indeterminate=\"false\"\n    android:max=\"100\"\n    android:progress=\"10\"\n    android:secondaryProgress=\"50\"/&gt;\n</code></pre> <p>\u4f7f\u7528 <code>android:secondaryProgress</code> \u5c5e\u6027\u8bbe\u7f6e\u9ed8\u8ba4\u7684\u7f13\u51b2\u503c\u3002</p> <p>II. \u4f7f\u7528 <code>setSecondaryProgress(int progress)</code> \u65b9\u6cd5\u53bb\u66f4\u65b0\u7f13\u51b2\u8fdb\u5ea6\u4f4d\u7f6e\u3002</p> <pre><code>ProgressBar progressBar = (ProgressBar) findViewById(R.id.progressBar);\n\n// set current progress\nprogressBar.setProgress(20);\n\n// set buffered progress\nprogressBar.setSecondaryProgress(50);\n</code></pre>"},{"location":"components/progress/#_7","title":"\u4e0d\u786e\u5b9a\u7684\u548c\u786e\u5b9a\u7684","text":"<p>\u521b\u5efa\u4e0d\u786e\u5b9a\u7684 <code>ProgressBar</code> \u8bbe\u7f6e <code>android:indeterminate</code> \u5c5e\u6027\u7684\u503c\u4e3a true\u3002</p> <pre><code>&lt;ProgressBar\n    android:id=\"@+id/progressBar\"\n    style=\"@style/Widget.AppCompat.ProgressBar.Horizontal\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:indeterminate=\"true\"/&gt;\n</code></pre> <p>\u6bcf\u5f53\u4f60\u9700\u8981\u4ece\u4e0d\u786e\u5b9a\u7684\u5207\u6362\u5230\u786e\u5b9a\u7684\u8fdb\u5ea6\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>setIndeterminate(boolean indeterminate)</code> \u65b9\u6cd5\u3002</p> <pre><code>ProgressBar progressBar = (ProgressBar) findViewById(R.id.progressBar);\nprogressBar.setIndeterminate(false);\n</code></pre>"},{"location":"components/progress/#_8","title":"\u5982\u4f55\u8bbe\u7f6e\u6837\u5f0f?","text":"<p>I. \u5728\u4f60\u7684 <code>values-v21/styles.xml</code> \u5185\u5b9a\u4e49\u81ea\u5b9a\u4e49\u6837\u5f0f\u3002</p> <pre><code>&lt;style name=\"LinearProgress\" parent=\"Theme.AppCompat.Light\"&gt;\n    &lt;item name=\"colorAccent\"&gt;@color/indigo&lt;/item&gt;\n    &lt;item name=\"android:progressBackgroundTint\"&gt;@color/pink&lt;/item&gt;\n&lt;/style&gt;\n</code></pre> <p>II. \u901a\u8fc7 <code>android:theme</code> \u5c5e\u6027\u5e94\u7528\u8fd9\u4e2a\u6837\u5f0f\u5230\u4f60\u7684 <code>ProgressBar</code>\u3002</p> <pre><code>&lt;ProgressBar\n    android:theme=\"@style/LinearProgress\"\n    style=\"@style/Widget.AppCompat.ProgressBar.Horizontal\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"/&gt;\n</code></pre> <p>\u5907\u6ce8</p> <p><code>android:progressBackgroundTint</code> \u5c5e\u6027\u53ea\u5de5\u4f5c\u5728\u786e\u5b9a\u7684 <code>ProgressBar</code>\u3002</p> <p>\u7ffb\u8bd1\u6c34\u5e73\u6709\u9650\uff0c\u6b22\u8fce\u6279\u8bc4\u6307\u6b63</p> <p>\u539f\u6587\u4f5c\u8005\uff1aYakiv Mospan \u539f\u6587\u94fe\u63a5\uff1aProgress</p>"},{"location":"components/rating-bar/","title":"Rating Bar","text":"<p>\u6458\u81ea Google \u7684\u6587\u6863</p> <p>RatingBar \u662f SeekBar \u548c ProgressBar \u7684\u4e00\u4e2a\u6269\u5c55\u7ec4\u4ef6\uff0c\u53ef\u4ee5\u4f7f\u7528\u661f\u661f\u6765\u4f5c\u4e3a\u8bc4\u5206\u5c55\u793a\u3002\u5f53\u4f7f\u7528\u9ed8\u8ba4\u5c3a\u5bf8\u7684 RatingBar \u7684\u65f6\u5019\uff0c\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u89e6\u6478/\u62d6\u62fd\u64cd\u4f5c\u6216\u8005\u65b9\u5411\u952e\u8bbe\u7f6e\u8bc4\u5206\u3002ratingBarStyleSmall \u548c ratingBarStyleIndicator \u4e0d\u652f\u6301\u4e0e\u7528\u6237\u4ea4\u4e92\uff0c\u53ea\u80fd\u88ab\u4f5c\u4e3a\u6307\u793a\u5668\u6765\u4f7f\u7528\u3002</p>"},{"location":"components/rating-bar/#_1","title":"\u5982\u4f55\u6dfb\u52a0\uff1f","text":"<p>I. \u5728\u4f60\u7684 <code>build.gradle</code> \u91cc\u6dfb\u52a0\u6700\u65b0\u7248\u672c\u7684 <code>appcompat</code> \u5e93\u3002</p> <pre><code>dependencies {\n    compile 'com.android.support:appcompat-v7:X.X.X' // where X.X.X version\n}\n</code></pre> <p>II. \u8ba9\u4f60\u7684 Activity \u7ee7\u627f\u81ea <code>android.support.v7.app.AppCompatActivity</code> \u3002</p> <pre><code>public class MainActivity extends AppCompatActivity {\n    ...\n}\n</code></pre> <p>III. \u5728\u4efb\u610f\u7684 <code>layout.xml</code> \u58f0\u660e <code>RatingBar</code> \u3002</p> <pre><code>&lt;RatingBar\n    android:rating=\"3.5\"\n    android:stepSize=\"0.5\"\n    android:numStars=\"5\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\" /&gt;\n</code></pre>"},{"location":"components/rating-bar/#_2","title":"\u5982\u4f55\u8bbe\u7f6e\u6837\u5f0f\uff1f","text":"<p>I. \u5728 <code>styles.xml</code> \u91cc\u58f0\u660e\u81ea\u5b9a\u4e49\u7684\u6837\u5f0f\u3002</p> <pre><code>&lt;style name=\"RatingBar\" parent=\"Theme.AppCompat\"&gt;\n    &lt;item name=\"colorControlNormal\"&gt;@color/indigo&lt;/item&gt;\n    &lt;item name=\"colorControlActivated\"&gt;@color/pink&lt;/item&gt;\n&lt;/style&gt;\n</code></pre> <p>II. \u8bbe\u7f6e <code>RatingBar</code> \u7684 <code>android:theme</code> \u5c5e\u6027\u503c\u4e3a\u4e0a\u9762\u81ea\u5b9a\u4e49\u7684\u6837\u5f0f\u3002</p> <pre><code>&lt;RatingBar\n    android:theme=\"@style/RatingBar\"\n    android:rating=\"3\"\n    android:stepSize=\"0.5\"\n    android:numStars=\"5\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\" /&gt;\n</code></pre> <p>\u7ffb\u8bd1\u6c34\u5e73\u6709\u9650\uff0c\u6b22\u8fce\u6279\u8bc4\u6307\u6b63</p> <p>\u539f\u6587\u4f5c\u8005: Yakiv Mospan \u539f\u6587\u94fe\u63a5: Rating Bar</p>"},{"location":"components/selection-controls/","title":"Selection Controls","text":""},{"location":"components/selection-controls/#check-box","title":"Check Box","text":"<p>\u6458\u81ea google material design \u6587\u6863</p> <p>Checkboxes\u5141\u8bb8\u7528\u6237\u4ece\u4e00\u7ec4\u9009\u9879\u4e2d\u9009\u62e9\u591a\u4e2a\u9009\u9879\u3002 \u5982\u679c\u4f60\u6709\u591a\u4e2a\u9009\u9879\u51fa\u73b0\u5728\u5217\u8868\u4e2d,\u4f60\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 Checkboxes \u4ee3\u66ff on/off Switches \u6765\u8282\u7701\u7a7a\u95f4\u3002 \u5982\u679c\u4f60\u53ea\u6709\u4e00\u4e2a\u9009\u9879\uff0c\u907f\u514d\u4f7f\u7528\u4e00\u4e2a Checkbox\uff0c\u4f46\u662f\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a on/off switch\u3002</p>"},{"location":"components/selection-controls/#_1","title":"\u5982\u4f55\u6dfb\u52a0?","text":"<p>I. \u5728\u4f60\u7684 <code>build.grade</code> \u6587\u4ef6\u672b\u5c3e\u6dfb\u52a0 <code>appcompat</code> \u5e93\u3002</p> <pre><code>dependencies {\n    compile 'com.android.support:appcompat-v7:X.X.X' // where X.X.X version\n}\n</code></pre> <p>II. \u8ba9\u4f60\u7684 Activity \u7ee7\u627f\u81ea <code>android.support.v7.app.AppCompatActivity</code>\u3002</p> <pre><code>public class MainActivity extends AppCompatActivity {\n    ...\n}\n</code></pre> <p>III. \u5728 <code>layout.xml</code> \u6587\u4ef6\u5185\u4efb\u4e00\u4f4d\u7f6e\u58f0\u660e\u4f60\u7684 <code>CheckBox</code></p> <pre><code>&lt;CheckBox\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:checked=\"true\"\n    android:text=\"Check Box\"/&gt;\n</code></pre>"},{"location":"components/selection-controls/#_2","title":"\u5982\u4f55\u8bbe\u7f6e\u6837\u5f0f?","text":"<p>I. \u5728 <code>styles.xml</code> \u6587\u4ef6\u5185\u58f0\u660e\u4f60\u7684\u81ea\u5b9a\u4e49\u6837\u5f0f.</p> <pre><code>&lt;style name=\"MyCheckBox\" parent=\"Theme.AppCompat.Light\"&gt;\n    &lt;item name=\"colorControlNormal\"&gt;@color/indigo&lt;/item&gt;\n    &lt;item name=\"colorControlActivated\"&gt;@color/pink&lt;/item&gt;\n&lt;/style&gt;\n</code></pre> <p>II. \u5c06\u8fd9\u4e2a\u6837\u5f0f\u901a\u8fc7 <code>android:theme</code> \u5c5e\u6027\u5e94\u7528\u5230\u4f60\u7684 <code>CheckBox</code>.</p> <pre><code>&lt;CheckBox\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:checked=\"true\"\n    android:text=\"Check Box\"\n    android:theme=\"@style/MyCheckBox\"/&gt;\n</code></pre>"},{"location":"components/selection-controls/#radio-button","title":"Radio Button","text":"<p>\u6458\u81ea google material design \u6587\u6863</p> <p>Radio buttons \u5141\u8bb8\u7528\u6237\u4ece\u4e00\u7ec4\u9009\u9879\u4e2d\u9009\u62e9\u4e00\u4e2a\u9009\u9879\u3002\u5982\u679c\u4f60\u89c9\u5f97\u7528\u6237\u9700\u8981\u5e76\u6392\u770b\u5230\u6240\u6709\u53ef\u9009\u9879\uff0c\u5e76\u7528 radio buttons \u4ece\u4e2d\u9009\u62e9\u552f\u4e00\u7684\u4e00\u4e2a\u9009\u9879\u3002 \u90a3\u4e48\uff0c\u53ef\u4ee5\u8003\u8651\u7528\u4e00\u4e2a\u4e0b\u62c9\u83dc\u5355\uff0c\u76f8\u5bf9\u4e8e\u663e\u793a\u6240\u6709\u9009\u9879\u4f1a\u5360\u7528\u66f4\u5c11\u7684\u7a7a\u95f4\u3002</p>"},{"location":"components/selection-controls/#_3","title":"\u5982\u4f55\u6dfb\u52a0?","text":"<p>I. \u5728\u4f60\u7684 <code>build.grade</code> \u6587\u4ef6\u672b\u5c3e\u6dfb\u52a0 <code>appcompat</code>\u5e93.</p> <pre><code>dependencies {\n    compile 'com.android.support:appcompat-v7:X.X.X' // where X.X.X version\n}\n</code></pre> <p>II. \u8ba9\u4f60\u7684 activity \u7ee7\u627f\u81ea <code>android.support.v7.app.AppCompatActivity</code>.</p> <pre><code>public class MainActivity extends AppCompatActivity {\n    ...\n}\n</code></pre> <p>III. \u5728 <code>layout.xml</code> \u6587\u4ef6\u5185\u4efb\u610f\u4f4d\u7f6e\u58f0\u660e\u4f60\u7684 <code>RadioButton</code></p> <pre><code>&lt;RadioButton\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:checked=\"true\"\n    android:text=\"Radio Button\"/&gt;\n</code></pre>"},{"location":"components/selection-controls/#_4","title":"\u5982\u4f55\u8bbe\u7f6e\u6837\u5f0f?","text":"<p>I. \u5728 <code>styles.xml</code> \u6587\u4ef6\u5185\u58f0\u660e\u4f60\u7684\u81ea\u5b9a\u4e49\u6837\u5f0f.</p> <pre><code>&lt;style name=\"MyRadioButton\" parent=\"Theme.AppCompat.Light\"&gt;\n    &lt;item name=\"colorControlNormal\"&gt;@color/indigo&lt;/item&gt;\n    &lt;item name=\"colorControlActivated\"&gt;@color/pink&lt;/item&gt;\n&lt;/style&gt;\n</code></pre> <p>II. \u901a\u8fc7 <code>android:theme</code> \u5c5e\u6027\u5c06\u8fd9\u4e2a\u6837\u5f0f\u5e94\u7528\u5230\u4f60\u7684 <code>RadioButton</code> .</p> <pre><code>&lt;RadioButton\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:checked=\"true\"\n    android:text=\"Radio Button\"\n    android:theme=\"@style/MyRadioButton\"/&gt;\n</code></pre>"},{"location":"components/selection-controls/#switch","title":"Switch","text":"<p>\u6458\u81ea google material design \u6587\u6863</p> <p>On/off Switches \u5207\u6362\u53ef\u4ee5\u8bbe\u7f6e\u5355\u9009\u72b6\u6001\u3002\u5f00\u5173\u63a7\u5236\u7684\u9009\u9879\uff0c\u4ee5\u53ca\u5b83\u6240\u5904\u7684\u72b6\u6001\uff0c\u5e94\u8be5\u901a\u8fc7\u4e0e\u5b83\u5bf9\u5e94\u4e00\u81f4\u7684\u5185\u90e8\u6807\u7b7e\u660e\u786e\u5730\u5c55\u793a\u51fa\u6765\uff0c\u4ee5\u8fbe\u5230\u4e0e radio button\uff08\u5355\u9009\u6309\u94ae\uff09\u76f8\u540c\u7684\u89c6\u89c9\u6548\u679c\u3002 on/off \u6ed1\u52a8\u5f00\u5173\u7528\u6587\u5b57\u6807\u793a \u201con\u201d \u548c \u201coff\u201d \u7684\u505a\u6cd5\u5df2\u88ab\u5f03\u7528\u3002\u8bf7\u7528\u6587\u9996\u6240\u793a\u56fe\u4f8b\u6765\u4ee3\u66ff\u3002</p>"},{"location":"components/selection-controls/#_5","title":"\u5982\u4f55\u6dfb\u52a0?","text":"<p>I. \u5728\u4f60\u7684 <code>build.grade</code> \u6587\u4ef6\u672b\u5c3e\u6dfb\u52a0 <code>appcompat</code> \u5e93\u3002</p> <pre><code>dependencies {\n    compile 'com.android.support:appcompat-v7:X.X.X' // where X.X.X version\n}\n</code></pre> <p>II. \u8ba9\u4f60\u7684 <code>activity</code> \u7ee7\u627f\u81ea <code>android.support.v7.app.AppCompatActivity</code>\u3002</p> <pre><code>public class MainActivity extends AppCompatActivity {\n    ...\n}\n</code></pre> <p>III. \u5728\u4efb\u610f\u7684 <code>layout.xml</code> \u6587\u4ef6\u5185\u58f0\u660e\u4f60\u7684 <code>SwitchCompat</code> \u3002</p> <pre><code>&lt;android.support.v7.widget.SwitchCompat\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:checked=\"true\" /&gt;\n</code></pre> <p>SwitchCompat \u662f Switch \u63a7\u4ef6\u7684\u5411\u4e0b\u517c\u5bb9\u7248\u672c\u3002</p>"},{"location":"components/selection-controls/#_6","title":"\u5982\u4f55\u8bbe\u7f6e\u6837\u5f0f?","text":"<p>I. \u5728\u4f60\u7684 <code>styles.xml</code> \u6587\u4ef6\u5185\u58f0\u660e\u81ea\u5b9a\u4e49\u6837\u5f0f\u3002</p> <pre><code>&lt;style name=\"MySwitch\" parent=\"Theme.AppCompat.Light\"&gt;\n    &lt;!-- active thumb &amp; track color (30% transparency) --&gt;\n    &lt;item name=\"colorControlActivated\"&gt;@color/indigo&lt;/item&gt;\n\n    &lt;!-- inactive thumb color --&gt;\n    &lt;item name=\"colorSwitchThumbNormal\"&gt;@color/pink&lt;/item&gt;\n\n    &lt;!-- inactive track color (30% transparency) --&gt;\n    &lt;item name=\"android:colorForeground\"&gt;@color/grey&lt;/item&gt;\n&lt;/style&gt;\n</code></pre> <p>II. \u5728\u4f60\u7684 <code>SwitchCompat</code> \u58f0\u660e\u91cc\u8bbe\u7f6e <code>android:theme</code> \u7684\u5c5e\u6027\u503c\u4e3a\u4f60\u81ea\u5b9a\u4e49\u7684\u6837\u5f0f\u3002</p> <pre><code>&lt;android.support.v7.widget.SwitchCompat\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:checked=\"true\"\n    android:theme=\"@style/MySwitch\" /&gt;\n</code></pre> <p>\u5907\u6ce8</p> <p>Android \u4f1a\u81ea\u52a8\u7ed9 <code>SwitchCompat</code> \u7684 <code>colorControlActivated</code> \u548c <code>android:colorForeground</code> \u589e\u52a0 30% \u7684\u900f\u660e\u5ea6\u3002</p> <p>\u7ffb\u8bd1\u6c34\u5e73\u6709\u9650\uff0c\u6b22\u8fce\u6279\u8bc4\u6307\u6b63</p> <p>\u539f\u6587\u4f5c\u8005\uff1aDmytro Danylyk \u539f\u6587\u94fe\u63a5\uff1aSelection Controls</p>"},{"location":"components/snackbars-and-toasts/","title":"Snackbars &amp; Toasts","text":""},{"location":"components/snackbars-and-toasts/#snack-bar","title":"Snack Bar","text":"<p>\u6458\u81ea google material design \u6587\u6863</p> <p>Snackbars \u901a\u8fc7\u5728\u5c4f\u5e55\u5e95\u90e8\u663e\u793a\u4e00\u4e2a\u7b80\u77ed\u7684\u4fe1\u606f\uff0c\u63d0\u4f9b\u4e86\u5173\u4e8e\u4e00\u4e2a\u64cd\u4f5c\u7684\u8f7b\u91cf\u53cd\u9988\u3002</p>"},{"location":"components/snackbars-and-toasts/#_1","title":"\u5982\u4f55\u6dfb\u52a0?","text":"<p>I. \u5728\u4f60\u7684 <code>build.grade</code> \u6587\u4ef6\u672b\u5c3e\u6dfb\u52a0\u6700\u65b0\u7684 <code>design</code> \u5e93\u3002</p> <pre><code>dependencies {\n    // optionally, Snackbar can be used in pair\n    // with CoordinatorLayout\n    // compile 'com.android.support:appcompat-v7:X.X.X'\n\n    compile 'com.android.support:design:X.X.X' // where X.X.X version\n}\n</code></pre> <p>II. \u7528 <code>make()</code> \u65b9\u6cd5\u521b\u5efa\u4e00\u4e2a <code>Snackbar</code> \u5b9e\u4f8b\uff0c\u7136\u540e\u8c03\u7528 <code>show()</code> \u65b9\u6cd5\u3002</p> <pre><code>Snackbar\n    .make(view, \"No network connection.\",Snackbar.LENGTH_SHORT)\n    .show();\n</code></pre> <p>\u53c2\u6570 <code>view</code> \u88ab\u7528\u6765\u67e5\u627e\u7236\u89c6\u56fe\u3002Snackbar \u5c06\u88ab\u663e\u793a\u5728\u5b83\u7684\u4e0a\u9762\u3002</p> <p>\u5907\u6ce8</p> <p>Snackbar \u5c06\u5c1d\u8bd5\u5e76\u627e\u5230\u4e00\u4e2a\u7236\u89c6\u56fe\u53bb\u63a7\u5236 Snackbar's \u89c6\u56fe\u3002Snackbar \u5c06\u6cbf\u7740\u89c6\u56fe\u6811\u53bb\u5c1d\u8bd5\u627e\u5230\u4e00\u4e2a\u5408\u9002\u7684\u7236\u89c6\u56fe\uff0c\u5b83\u88ab\u5b9a\u4e49\u4e3a\u4e00\u4e2a <code>CoordinatorLayout</code> \u6216\u8005\u7a97\u53e3\u7684 decor's \u5185\u5bb9\u89c6\u56fe\uff0c\u4ee5\u5148\u627e\u5230\u7684\u4e3a\u51c6\u3002</p>"},{"location":"components/snackbars-and-toasts/#duration","title":"Duration","text":"<p>\u6307\u5b9a <code>Snackbar</code> \u5728\u5c4f\u5e55\u4e0a\u663e\u793a\u591a\u957f\u65f6\u95f4\u4f7f\u7528 <code>setDuration</code> \u65b9\u6cd5\u3002</p> <pre><code>// \u9884\u5b9a\u4e49\u7684\u6301\u7eed\u65f6\u95f4\u5e38\u91cf\nSnackbar.LENGTH_SHORT // 1500 millis\nSnackbar.LENGTH_LONG // 2750 millis\nSnackbar.LENGTH_INDEFINITE\n\n// \u4f60\u53ef\u8bbe\u7f6e\u81ea\u5df1\u5b9a\u4e49\u7684\u6301\u7eed\u65f6\u95f4\nsnackbar.setDuration(TimeUnit.MINUTES.toMillis(1));\n</code></pre>"},{"location":"components/snackbars-and-toasts/#dismiss","title":"Dismiss","text":"<p>\u4f7f\u7528 <code>dismiss()</code> \u65b9\u6cd5\u53ef\u4ee5\u5728\u4efb\u4f55\u65f6\u5019 dismiss \u6389 <code>Snackbar</code> \u3002</p> <pre><code>Snackbar snackBar = Snackbar.make(view, text, duration);\nsnackBar.dismiss(); //hide snackbar\n</code></pre>"},{"location":"components/snackbars-and-toasts/#events","title":"Events","text":"<p>\u6bcf\u5f53 <code>Snackbar</code> \u88ab\u663e\u793a\u6216\u8005\u9690\u85cf\u7684\u65f6\u5019\u53ef\u4ee5\u4f7f\u7528 <code>setCallback</code> \u65b9\u6cd5\u6765\u8ffd\u8e2a\u3002</p> <pre><code>Snackbar\n  .make(...)\n  .setCallback(new Snackbar.Callback() {\n    @Override\n    public void onDismissed(Snackbar snackbar, int event) {\n      // do some action on dismiss\n    }\n    @Override\n    public void onShown(Snackbar snackbar) {\n      // do some action when snackbar is showed\n    }\n  })\n</code></pre> <p>\u53c2\u6570 <code>event</code> \u6765\u81ea\u4e8e <code>onDismissed()</code>\uff0c\u662f Snackbar.Callback \u5185\u9884\u5b9a\u4e49\u7684\u5e38\u91cf\u4e4b\u4e00\u3002</p>"},{"location":"components/snackbars-and-toasts/#actions","title":"Actions","text":"<p>Snackbar \u53ef\u4ee5\u5305\u542b\u4e00\u4e2a action \u3002\u901a\u8fc7\u8c03\u7528 <code>setAction()</code> \u65b9\u6cd5\u6dfb\u52a0\u5b83\u3002</p> <pre><code>Snackbar\n .make(...)\n .setAction(\"Retry\", new View.OnClickListener() {\n             @Override\n             public void onClick(View v) {\n               // retry to send email here\n             }\n           })\n</code></pre> <p>\u8981\u5f00\u542f\u6ed1\u52a8 dismiss \u548c\u81ea\u52a8\u7684\u79fb\u52a8\u50cf FloatingActionButton \u8fd9\u6837\u7684\u7ec4\u4ef6\u9700\u8981\u4f7f\u7528 CoordinatorLayout \u4f5c\u4e3a\u6839\u5e03\u5c40\u3002</p> <pre><code>&lt;android.support.design.widget.CoordinatorLayout\n        xmlns:android=\"http://schemas.android.com/apk/res/android\"\n        xmlns:tools=\"http://schemas.android.com/tools\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"&gt;\n\n    &lt;android.support.design.widget.FloatingActionButton\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_gravity=\"end|bottom\"\n            android:src=\"@android:drawable/ic_menu_call\"/&gt;\n&lt;/android.support.design.widget.CoordinatorLayout&gt;\n</code></pre>"},{"location":"components/snackbars-and-toasts/#_2","title":"\u5982\u4f55\u8bbe\u7f6e\u6837\u5f0f?","text":""},{"location":"components/snackbars-and-toasts/#_3","title":"\u901a\u8fc7\u4e3b\u9898","text":"<p>I. \u5728\u4f60\u7684 <code>values/styles.xml</code> \u6587\u4ef6\u5185\u5b9a\u4e49\u81ea\u5b9a\u4e49\u6837\u5f0f\u3002</p> <pre><code>&lt;style name=\"SnackbarTheme\" parent=\"Theme.AppCompat.Light\"&gt;\n    &lt;item name=\"colorAccent\"&gt;@color/indigo&lt;/item&gt;\n    &lt;item name=\"android:textColor\"&gt;@color/pink&lt;/item&gt;\n&lt;/style&gt;\n</code></pre> <p>II. \u5728 <code>AndroidManifest.xml</code> \u4e2d\u901a\u8fc7<code>android:theme</code> \u5c5e\u6027\u5e94\u7528\u8fd9\u4e2a\u6837\u5f0f\u5230\u4f60\u7684 <code>Activity</code>\u3002</p> <pre><code>&lt;activity\n    android:name=\".SnackbarActivity\"\n    android:theme=\"@style/AppTheme\"&gt;\n&lt;/activity&gt;\n</code></pre> <p>\u5907\u6ce8</p> <p>\u5e94\u7528\u4e3b\u9898\u5230 <code>Activity</code> \u5c06\u4f1a\u5e94\u7528 <code>colorAccent</code> \u548c <code>android:textColor</code> \u5230\u5b83\u5185\u90e8\u7684\u6240\u6709 view\u3002</p>"},{"location":"components/snackbars-and-toasts/#_4","title":"\u901a\u8fc7\u4ee3\u7801","text":"<p>\u4f7f\u7528 <code>getView()</code> \u65b9\u6cd5\u83b7\u53d6 <code>Snackbar</code> \u89c6\u56fe\u5e76\u6539\u53d8\u5b83\u7684\u5c5e\u6027\u3002</p> <pre><code>// \u521b\u5efa\u5b9e\u4f8b\nSnackbar snackbar = Snackbar.make(view, text, duration);\n\n// \u8bbe\u7f6e\u52a8\u4f5c\u6309\u94ae\u989c\u8272\nsnackbar.setActionTextColor(getResources().getColor(R.color.indigo));\n\n// \u83b7\u53d6 snackbar \u89c6\u56fe\nView snackbarView = snackbar.getView();\n\n// \u6539\u53d8 snackbar \u6587\u672c\u989c\u8272\nint snackbarTextId = android.support.design.R.id.snackbar_text;\nTextView textView = (TextView)snackbarView.findViewById(snackbarTextId);\ntextView.setTextColor(getResources().getColor(R.color.indigo));\n\n// \u6539\u53d8 snackbar \u80cc\u666f\nsnackbarView.setBackgroundColor(Color.MAGENTA);\n</code></pre>"},{"location":"components/snackbars-and-toasts/#view","title":"\u901a\u8fc7\u81ea\u5b9a\u4e49 view","text":"<p>I. \u5728\u4f60\u7684 values/layout \u6587\u4ef6\u5939\u91cc\u6dfb\u52a0\u4e00\u4e2a\u81ea\u5b9a\u4e49\u5e03\u5c40\u3002</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n              android:orientation=\"horizontal\"\n              android:layout_width=\"match_parent\"\n              android:layout_height=\"wrap_content\"&gt;\n\n    &lt;Button\n        android:id=\"@+id/snackbar_action\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginLeft=\"@dimen/design_snackbar_extra_spacing_horizontal\"\n        android:layout_marginStart=\"@dimen/design_snackbar_extra_spacing_horizontal\"\n        android:layout_gravity=\"center_vertical|right|end\"\n        android:paddingTop=\"@dimen/design_snackbar_padding_vertical\"\n        android:paddingBottom=\"@dimen/design_snackbar_padding_vertical\"\n        android:paddingLeft=\"@dimen/design_snackbar_padding_horizontal\"\n        android:paddingRight=\"@dimen/design_snackbar_padding_horizontal\"\n        android:visibility=\"gone\"\n        android:textColor=\"?attr/colorAccent\"\n        style=\"?attr/borderlessButtonStyle\"/&gt;\n\n    &lt;TextView\n        android:gravity=\"center_vertical|right\"\n        android:id=\"@+id/snackbar_text\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_weight=\"1\"\n        android:paddingTop=\"@dimen/design_snackbar_padding_vertical\"\n        android:paddingBottom=\"@dimen/design_snackbar_padding_vertical\"\n        android:paddingLeft=\"@dimen/design_snackbar_padding_horizontal\"\n        android:paddingRight=\"@dimen/design_snackbar_padding_horizontal\"\n        android:textAppearance=\"@style/TextAppearance.Design.Snackbar.Message\"\n        android:maxLines=\"@integer/design_snackbar_text_max_lines\"\n        android:layout_gravity=\"center_vertical|left|start\"\n        android:ellipsize=\"end\"/&gt;\n\n&lt;/LinearLayout&gt;\n</code></pre> <p>\u5907\u6ce8</p> <p>Use <code>@dimen/design_snackbar</code> values to match material design guidelines. Use <code>?attr/colorAccent</code> to apply your Application Theme changes to <code>Snackbar</code>.</p> <p>II. \u7ee7\u627f\u81ea BaseTransientBottomBar \u7c7b.</p> <pre><code>public class CustomSnackbar extends BaseTransientBottomBar&lt;CustomSnackbar&gt; {\n\n    /**\n     * Constructor for the transient bottom bar.\n     *\n     * @param parent The parent for this transient bottom bar.\n     * @param content The content view for this transient bottom bar.\n     * @param contentViewCallback The content view callback for this transient bottom bar.\n     */\n    private CustomSnackbar(ViewGroup parent, View content,\n                ContentViewCallback contentViewCallback) {\n        super(parent, content, contentViewCallback);\n    }\n}\n</code></pre> <p>III. \u6dfb\u52a0 BaseTransientBottomBar.ContentViewCallback</p> <pre><code>public class CustomSnackbar ... {\n\n  ...\n\n  private static class ContentViewCallback implements\n                       BaseTransientBottomBar.ContentViewCallback {\n\n      // view inflated from custom layout\n      private View content;\n\n      public ContentViewCallback(View content) {\n          this.content = content;\n      }\n\n      @Override\n      public void animateContentIn(int delay, int duration) {\n          // add custom *in animations for your views\n          // e.g. original snackbar uses alpha animation, from 0 to 1\n          ViewCompat.setScaleY(content, 0f);\n          ViewCompat.animate(content)\n                    .scaleY(1f).setDuration(duration)\n                    .setStartDelay(delay);\n      }\n\n      @Override\n      public void animateContentOut(int delay, int duration) {\n          // add custom *out animations for your views\n          // e.g. original snackbar uses alpha animation, from 1 to 0\n          ViewCompat.setScaleY(content, 1f);\n          ViewCompat.animate(content)\n                    .scaleY(0f)\n                    .setDuration(duration)\n                    .setStartDelay(delay);\n      }\n  }\n}\n</code></pre> <p>IV. \u901a\u8fc7\u81ea\u5b9a\u4e49\u5e03\u5c40\u548c\u65b9\u6cd5\u6765\u521b\u5efa <code>Snackbar</code></p> <pre><code>public class final CustomSnackbar ...{\n\n ...\n\npublic static CustomSnackbar make(ViewGroup parent, @Duration int duration) {\n     // inflate custom layout\n     LayoutInflater inflater = LayoutInflater.from(parent.getContext());\n     View content = inflater.inflate(R.layout.snackbar_view, parent, false);\n\n     // create snackbar with custom view\n     ContentViewCallback callback= new ContentViewCallback(content);\n     CustomSnackbar customSnackbar = new CustomSnackbar(parent, content, callback);\n\n     // set snackbar duration\n     customSnackbar.setDuration(duration);\n     return customSnackbar;\n }\n\n // set text in custom layout\n public CustomSnackbar setText(CharSequence text) {\n     TextView textView = (TextView) getView().findViewById(R.id.snackbar_text);\n     textView.setText(text);\n     return this;\n }\n\n // set action in custom layout\n public CustomSnackbar setAction(CharSequence text, final OnClickListener listener) {\n     Button actionView = (Button) getView().findViewById(R.id.snackbar_action);\n     actionView.setText(text);\n     actionView.setVisibility(View.VISIBLE);\n     actionView.setOnClickListener(new View.OnClickListener() {\n         @Override\n         public void onClick(View view) {\n             listener.onClick(view);\n             // Now dismiss the Snackbar\n             dismiss();\n         }\n     });\n     return this;\n }\n}\n</code></pre> <p>V. \u521b\u5efa <code>CustomSnackbar</code> \u5b9e\u4f8b\u5bf9\u8c61\u5e76\u8c03\u7528 <code>show()</code> \u65b9\u6cd5\u3002</p> <pre><code>CustomSnackbar customSnackbar = CustomSnackbar.make(rooView, CustomSnackbar.LENGTH_INDEFINITE);\ncustomSnackbar.setText(\"No network connection!\");\ncustomSnackbar.setAction(\"Retry\", new View.OnClickListener() {\n    @Override\n    public void onClick(View v) {\n        // handle click here\n    }\n});\ncustomSnackbar.show();\n</code></pre>"},{"location":"components/snackbars-and-toasts/#toast","title":"Toast","text":"<p>\u6458\u81ea google material design \u6587\u6863</p> <p>Android \u53e6\u5916\u63d0\u4f9b\u4e86\u4e00\u4e2a toast\uff0c\u4e3b\u8981\u7528\u4e8e\u7cfb\u7edf\u6d88\u606f\u3002Toasts \u8ddf snackers \u7c7b\u4f3c\uff0c\u4f46\u662f\u4e0d\u80fd\u5305\u542b actions \u548c \u4e0d\u80fd\u61c2\u5c4f\u5e55\u6ed1\u52a8\u5173\u95ed\u6389\u3002</p>"},{"location":"components/snackbars-and-toasts/#_5","title":"\u5982\u4f55\u6dfb\u52a0?","text":"<p>\u7528 make() \u65b9\u6cd5\u521b\u5efa\u4e00\u4e2a <code>Toast</code> \u5b9e\u4f8b\uff0c\u7136\u540e\u8c03\u7528 show() \u65b9\u6cd5\u3002</p> <pre><code>Toast.makeText(context, \"No network connection.\", duration).show();\n</code></pre>"},{"location":"components/snackbars-and-toasts/#duration_1","title":"Duration","text":"<p>\u4f7f\u7528 <code>makeText()</code> \u65b9\u6cd5\u7684 <code>duration</code> \u53c2\u6570 \u6216\u8005 <code>setDuration</code>  \u65b9\u6cd5\u6307\u5b9a Snackbar \u5728\u5c4f\u5e55\u4e0a\u663e\u793a\u591a\u957f\u65f6\u95f4\u3002</p> <pre><code>// you can use only those 2 predefined constants\nduration = Toast.LENGTH_SHORT; // 2000 millis\nduration = Toast.LENGTH_LONG; // 3500 millis\n\ntoast.setDuration(duration);\n</code></pre>"},{"location":"components/snackbars-and-toasts/#cancel","title":"Cancel","text":"<p>\u53ef\u4ee5\u5728\u4efb\u4f55\u65f6\u5019\u4f7f\u7528 <code>cancel()</code> \u65b9\u6cd5\u624b\u52a8\u7684\u53bb\u9690\u85cf <code>Toast</code>  \u3002</p> <pre><code>Toast toast= Toast.make(view, text, duration).show();\ntoast.cancel(); //hide toast\n</code></pre> <p>\u5907\u6ce8</p> <p>\u5982\u679c\u5728\u5b83\u663e\u793a\u7684\u65f6\u5019\u5173\u95ed\u5b83\u6216\u8005\u5728\u4e0d\u60f3\u663e\u793a\u7684\u65f6\u5019\u5b83\u4ecd\u7136\u663e\u793a\uff0c\u901a\u5e38\u4f60\u4e0d\u9700\u8981\u53bb\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\u3002\u5b83\u4f1a\u5728\u6301\u7eed\u9002\u5f53\u7684\u65f6\u95f4\u4e4b\u540e\u81ea\u5df1\u6d88\u5931\u3002</p>"},{"location":"components/snackbars-and-toasts/#positioning","title":"Positioning","text":"<p>\u7528 <code>setGravity()</code> \u53ef\u4ee5\u6539\u53d8 <code>Toast</code> \u7684\u663e\u793a\u4f4d\u7f6e\u3002</p> <pre><code>int gravity = Gravity.CENTER; // the position of toast\nint xOffset = 0; // horizontal offset from current gravity\nint yOffset = 0; // vertical offset from current gravity\n\nToast toast= Toast.make(view, text, duration);\ntoast.setGravity(gravity, xOffset, yOffset);\n</code></pre>"},{"location":"components/snackbars-and-toasts/#_6","title":"\u5982\u4f55\u8bbe\u7f6e\u6837\u5f0f?","text":""},{"location":"components/snackbars-and-toasts/#_7","title":"\u7528\u4ee3\u7801","text":"<pre><code>// \u521b\u5efa Toast \u5b9e\u4f8b\nToast toast = Toast.makeText(context, text, duration);\n\n// \u8bbe\u7f6e\u6d88\u606f\u989c\u8272\nTextView textView= (TextView) toast.getView().findViewById(android.R.id.message);\ntextView.setTextColor(Color.YELLOW);\n\n// \u8bbe\u7f6e\u80cc\u666f\u989c\u8272\ntoast.getView().setBackgroundColor(getResources().getColor(R.color.indigo));\n</code></pre>"},{"location":"components/snackbars-and-toasts/#view_1","title":"\u7528\u81ea\u5b9a\u4e49 View","text":"<p>I. \u5728 <code>layout.xml</code> \u6587\u4ef6\u5185\u7684\u4efb\u610f\u4f4d\u7f6e\u58f0\u660e\u4f60\u7684\u81ea\u5b9a\u4e49 View\u3002</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;TextView\n        xmlns:android=\"http://schemas.android.com/apk/res/android\"\n        android:id=\"@+id/txtMessage\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:drawableStart=\"@drawable/ic_report_problem\"\n        android:drawablePadding=\"8dp\"\n        android:paddingTop=\"8dp\"\n        android:paddingBottom=\"8dp\"\n        android:paddingLeft=\"16dp\"\n        android:paddingRight=\"16dp\"\n        android:gravity=\"center\"\n        android:textColor=\"@android:color/white\"\n        android:textSize=\"16dp\"\n        android:text=\"No connection.\"\n        android:background=\"@color/indigo\"/&gt;\n</code></pre> <p>II. \u901a\u8fc7  <code>setView()</code> \u65b9\u6cd5\u8bbe\u7f6e\u4f60\u7684\u81ea\u5b9a\u4e49 View \u5230 <code>Toast</code> \u3002</p> <pre><code>// \u521b\u5efa Toast \u5b9e\u4f8b\nToast toast = new Toast(getApplicationContext());\n\n// \u521b\u5efa\u81ea\u5b9a\u4e49 view\nView view = getLayoutInflater().inflate(R.layout.toast_view, null);\n\n// \u8bbe\u7f6e\u81ea\u5b9a\u4e49 view\ntoast.setView(view);\n\n// \u8bbe\u7f6e\u663e\u793a\u6301\u7eed\u65f6\u95f4\ntoast.setDuration(Toast.LENGTH_LONG);\n\n// \u8bbe\u7f6e\u4f4d\u7f6e\nint margin = getResources().getDimensionPixelSize(R.dimen.toast_vertical_margin);\ntoast.setGravity(Gravity.BOTTOM | Gravity.CENTER_VERTICAL, 0, margin);\n\n// \u663e\u793a Toast\ntoast.show();\n</code></pre> <p>\u7ffb\u8bd1\u6c34\u5e73\u6709\u9650\uff0c\u6b22\u8fce\u6279\u8bc4\u6307\u6b63</p> <p>\u539f\u6587\u4f5c\u8005\uff1aYakiv Mospan \u539f\u6587\u5730\u5740\uff1aSnackbars &amp; Toasts</p>"},{"location":"components/tabs/","title":"Tabs","text":"<p>\u6458\u81ea google material design \u6587\u6863</p> <p>Tabs \u8ba9\u4e0d\u540c\u89c6\u56fe\u6216\u529f\u80fd\u4e4b\u95f4\u7684\u6d4f\u89c8\u5207\u6362\u548c\u6d4f\u89c8\u5206\u7c7b\u6570\u636e\u96c6\u5408\u53d8\u5f97\u5f88\u5bb9\u6613\u3002</p>"},{"location":"components/tabs/#_1","title":"\u5982\u4f55\u6dfb\u52a0\uff1f","text":"<p>I. \u5728\u4f60\u7684 <code>build.gradle</code> \u91cc\u6dfb\u52a0\u6700\u65b0\u7248\u672c\u7684 <code>design</code> \u548c <code>appcompat</code> \u5e93\u3002</p> <pre><code>dependencies {\n    compile 'com.android.support:appcompat-v7:X.X.X'\n    compile 'com.android.support:design:X.X.X'\n    compile 'com.android.support:support-v13:X.X.X'\n    // where X.X.X version\n\n    // if you want to support android sdk &lt; 13\n    // you need to add support library v4 instead of v13\n}\n</code></pre> <p>II. \u8ba9\u4f60\u7684 Activity \u7ee7\u627f\u81ea <code>android.support.v7.app.AppCompatActivity</code> \u3002</p> <pre><code>public class MainActivity extends AppCompatActivity {\n ...\n}\n</code></pre> <p>III. \u5728\u4f60\u7684 <code>layout.xml</code> \u6587\u4ef6\u91cc\u58f0\u660e <code>TabLayout</code> \u548c <code>ViewPager</code> \u3002</p> <pre><code>&lt;LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\"&gt;\n\n    &lt;android.support.design.widget.TabLayout\n        android:id=\"@+id/tabLayout\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:background=\"?attr/colorPrimary\" /&gt;\n\n    &lt;android.support.v4.view.ViewPager\n        android:id=\"@+id/viewPager\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\" /&gt;\n\n&lt;/LinearLayout&gt;\n</code></pre> <p>IV. \u5c06 <code>TabLayout</code> \u548c <code>ViewPager</code> \u7ec4\u5408\u8d77\u6765\u3002</p> <pre><code>ViewPager viewPager = (ViewPager) findViewById(R.id.viewPager);\n\n//set adapter to your ViewPager\nviewPager.setAdapter(new TabPagerAdapter(getFragmentManager()));\n\nTabLayout tabLayout = (TabLayout) findViewById(R.id.tabLayout);\ntabLayout.setupWithViewPager(viewPager);\n</code></pre> <p>V. \u5728 ViewPager \u7684 adapter \u91cc\u91cd\u5199 <code>getPageTitle</code> \u65b9\u6cd5\uff0c\u5e76\u8fd4\u56de tab \u6807\u9898\u3002</p> <pre><code>@Override\npublic CharSequence getPageTitle(int position) {\n     switch (position) {\n          case ITEM_ONE:\n               return \"Item One\";\n          ...\n     }\n}\n</code></pre>"},{"location":"components/tabs/#_2","title":"\u5982\u4f55\u8bbe\u7f6e\u6837\u5f0f?","text":"<p>I. \u5728\u4f60\u7684 <code>styles.xml</code> \u91cc\u58f0\u660e\u81ea\u5b9a\u4e49\u6837\u5f0f\u3002</p> <pre><code>&lt;style name=\"TabLayoutStyle\" parent=\"Widget.Design.TabLayout\"&gt;\n    &lt;item name=\"tabMaxWidth\"&gt;@dimen/tab_max_width&lt;/item&gt;\n    &lt;item name=\"tabIndicatorColor\"&gt;@color/pink&lt;/item&gt;\n    &lt;item name=\"tabIndicatorHeight\"&gt;2dp&lt;/item&gt;\n    &lt;item name=\"tabPaddingStart\"&gt;8dp&lt;/item&gt;\n    &lt;item name=\"tabPaddingEnd\"&gt;8dp&lt;/item&gt;\n    &lt;item name=\"tabBackground\"&gt;?attr/selectableItemBackground&lt;/item&gt;\n    &lt;item name=\"tabTextAppearance\"&gt;@style/TabTextAppearance&lt;/item&gt;\n    &lt;item name=\"tabSelectedTextColor\"&gt;@android:color/white&lt;/item&gt;\n&lt;/style&gt;\n\n&lt;style name=\"TabTextAppearance\" parent=\"TextAppearance.Design.Tab\"&gt;\n    &lt;item name=\"android:textSize\"&gt;14sp&lt;/item&gt;\n    &lt;item name=\"android:textColor\"&gt;@color/color_white_semitransparent&lt;/item&gt;\n    &lt;item name=\"textAllCaps\"&gt;true&lt;/item&gt;\n&lt;/style&gt;\n</code></pre> <p>II. \u8bbe\u7f6e\u4f60\u7684 <code>TabLayout</code> \u7684 <code>style</code> \u5c5e\u6027\u4e3a\u4e0a\u9762\u58f0\u660e\u7684\u6837\u5f0f\u3002</p> <pre><code>&lt;android.support.design.widget.TabLayout\n        style=\"@style/TabLayoutStyle\"\n        android:id=\"@+id/tabLayout\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"/&gt;\n</code></pre>"},{"location":"components/tabs/#tabs-with-icons-and-text","title":"Tabs with icons and text","text":"<p>I. \u5728 ViewPager \u7684 adapter \u91cc\u91cd\u5199 <code>getPageTitle</code> \u65b9\u6cd5\uff0c\u5e76\u8fd4\u56de tab \u6807\u9898\u3002</p> <pre><code>@Override\npublic CharSequence getPageTitle(int position) {\n     switch (position) {\n          case ITEM_ONE:\n               return \"Item One\";\n          ...\n     }\n}\n</code></pre> <p>II. \u4e3a\u6bcf\u4e00\u4e2a tab \u56fe\u6807\u521b\u5efa\u4e00\u4e2a\u9009\u62e9\u5668\u3002</p> <pre><code>&lt;selector xmlns:android=\"http://schemas.android.com/apk/res/android\"&gt;\n    &lt;item\n        android:state_selected=\"true\"\n        android:drawable=\"@drawable/ic_call_selected\" /&gt;\n    &lt;item\n        android:state_selected=\"false\"\n        android:drawable=\"@drawable/ic_call_unselected\" /&gt;\n&lt;/selector&gt;\n</code></pre> <p>III. \u4f7f\u7528 <code>TabLayout.Tab</code> \u7684 <code>setIcon</code> \u65b9\u6cd5\u6539\u53d8 tab \u7684\u56fe\u6807\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 <code>TabLayout</code> \u7684 <code>getTabAt</code> \u65b9\u6cd5\uff0c\u5e76\u4f20\u5165 tab \u7684\u7d22\u5f15\uff0c\u6765\u83b7\u53d6 <code>TabLayout.Tab</code> \u5bf9\u8c61\u3002</p> <pre><code>...\n//after initialization TabLayout and ViewPager\nTabLayout.Tab tabCall = tabLayout.getTabAt(ITEM_CALL);\ntabCall.setIcon(R.drawable.selector_call);\n\n//repeat this code for all your tabs\n...\n</code></pre>"},{"location":"components/tabs/#tabs-with-icons-only","title":"Tabs with icons only","text":"<p>I. \u4e3a\u6bcf\u4e00\u4e2a tab \u56fe\u6807\u521b\u5efa\u4e00\u4e2a\u9009\u62e9\u5668\u3002</p> <pre><code>&lt;selector xmlns:android=\"http://schemas.android.com/apk/res/android\"&gt;\n    &lt;item\n        android:state_selected=\"true\"\n        android:drawable=\"@drawable/ic_call_selected\" /&gt;\n    &lt;item\n        android:state_selected=\"false\"\n        android:drawable=\"@drawable/ic_call_unselected\" /&gt;\n&lt;/selector&gt;\n</code></pre> <p>II. \u4f7f\u7528 <code>TabLayout.Tab</code> \u7684 <code>setIcon</code> \u65b9\u6cd5\u6539\u53d8 tab \u7684\u56fe\u6807\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 <code>TabLayout</code> \u7684 <code>getTabAt</code> \u65b9\u6cd5\uff0c\u5e76\u4f20\u5165 tab \u7684\u7d22\u5f15\uff0c\u6765\u83b7\u53d6 <code>TabLayout.Tab</code> \u5bf9\u8c61\u3002</p> <pre><code>...\n//after initialization TabLayout and ViewPager\nTabLayout.Tab tabCall = tabLayout.getTabAt(ITEM_CALL);\ntabCall.setIcon(R.drawable.selector_call);\n\n//repeat this code for all your tabs\n...\n</code></pre>"},{"location":"components/tabs/#scrollable-tabs","title":"Scrollable Tabs","text":"<p>\u8981\u8ba9\u4f60\u7684 <code>TabLayout</code> \u652f\u6301\u6eda\u52a8\uff0c\u9700\u8981\u6dfb\u52a0 <code>custom:tabMode</code> \u5c5e\u6027\uff0c\u5e76\u8bbe\u7f6e\u5176\u503c\u4e3a <code>scrollable</code> \u3002</p> <pre><code>&lt;android.support.design.widget.TabLayout\n        xmlns:custom=\"http://schemas.android.com/apk/res-auto\"\n        android:id=\"@+id/tabLayout\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        custom:tabMode=\"scrollable\" /&gt;\n</code></pre>"},{"location":"components/tabs/#centered-tabs","title":"Centered tabs","text":"<p>\u521b\u5efa\u4f4d\u7f6e\u5c45\u4e2d\u7684 tabs \u9700\u8981\u6dfb\u52a0 <code>custom:tabGravity</code> \u5c5e\u6027\uff0c\u5e76\u8bbe\u7f6e\u5176\u503c\u4e3a <code>center</code> \u3002</p> <pre><code>&lt;android.support.design.widget.TabLayout\n        xmlns:custom=\"http://schemas.android.com/apk/res-auto\"\n        android:id=\"@+id/tabLayout\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        custom:tabGravity=\"center\" /&gt;\n</code></pre> <p>\u7ffb\u8bd1\u6c34\u5e73\u6709\u9650\uff0c\u6b22\u8fce\u6279\u8bc4\u6307\u6b63</p> <p>\u539f\u6587\u4f5c\u8005: Volodymyr Yatsykiv \u539f\u6587\u94fe\u63a5: Tabs</p>"},{"location":"components/text-fields/","title":"Text fields","text":""},{"location":"components/text-fields/#text-fields","title":"Text Fields","text":"<p>\u6458\u81ea google material design \u6587\u6863</p> <p>Text fields \u5141\u8bb8\u7528\u6237\u8f93\u5165\u6587\u672c\uff0c\u9009\u62e9\u6587\u672c\uff08\u526a\u5207\uff0c\u590d\u5236\uff0c\u7c98\u8d34\uff09\uff0c\u901a\u8fc7\u81ea\u52a8\u8865\u5168\u68c0\u7d22\u67e5\u8be2\u6570\u636e\u3002</p>"},{"location":"components/text-fields/#_1","title":"\u5982\u4f55\u6dfb\u52a0?","text":"<p>I. \u5728\u4f60\u7684 <code>build.grade</code> \u6587\u4ef6\u672b\u5c3e\u6dfb\u52a0 <code>appcompat</code> \u5e93\u3002</p> <p><pre><code>dependencies {\n    compile 'com.android.support:appcompat-v7:X.X.X' // where X.X.X version\n}\n</code></pre> II. \u8ba9\u4f60\u7684 activity \u7ee7\u627f\u81ea <code>android.support.v7.app.AppCompatActivity</code>\u3002</p> <pre><code>public class MainActivity extends AppCompatActivity {\n    ...\n}\n</code></pre> <p>III. \u5728\u4efb\u610f\u7684 <code>layout.xml</code> \u6587\u4ef6\u5185\u58f0\u660e\u4f60\u7684 <code>EditText</code> \u3002</p> <pre><code>&lt;EditText\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:hint=\"Hint text\" /&gt;\n</code></pre>"},{"location":"components/text-fields/#_2","title":"\u5982\u4f55\u8bbe\u7f6e\u6837\u5f0f?","text":"<p>I. \u5728\u4f60\u7684 <code>styles.xml</code> \u6587\u4ef6\u5185\u58f0\u660e\u81ea\u5b9a\u4e49\u6837\u5f0f\u3002</p> <p><pre><code>&lt;style name=\"MyEditText\" parent=\"Theme.AppCompat.Light\"&gt;\n    &lt;item name=\"colorControlNormal\"&gt;@color/indigo&lt;/item&gt;\n    &lt;item name=\"colorControlActivated\"&gt;@color/pink&lt;/item&gt;\n&lt;/style&gt;\n</code></pre> II. \u5728\u4f60\u7684 <code>EditText</code> \u58f0\u660e\u91cc\u8bbe\u7f6e <code>android:theme</code> \u7684\u5c5e\u6027\u503c\u4e3a\u4f60\u81ea\u5b9a\u4e49\u7684\u6837\u5f0f\u3002</p> <pre><code>&lt;EditText\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:hint=\"Hint text\"\n    android:theme=\"@style/MyEditText\" /&gt;\n</code></pre>"},{"location":"components/text-fields/#single-line-text-field","title":"Single-line text field","text":"<p>\u6458\u81ea google material design \u6587\u6863</p> <p>Single-line text fields\uff0c\u5f53\u8f93\u5165\u5149\u6807\u5230\u8fbe\u8f93\u5165\u6846\u53f3\u8fb9\u7f18\u65f6\uff0c\u6587\u672c\u6846\u7684\u5185\u5bb9\u4f1a\u81ea\u52a8\u6eda\u52a8\u5230\u5de6\u8fb9\u3002</p> <p>\u8981\u8ba9\u4f60\u7684 <code>EditText</code> \u4e3a\u5355\u884c\uff0c\u9700\u8981\u6dfb\u52a0 <code>android:singleLine</code> \u5c5e\u6027\uff0c\u5e76\u4e14\u8bbe\u7f6e\u5176\u503c\u4e3a <code>true</code> \u3002</p> <pre><code>&lt;EditText\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:singleLine=\"true\"\n    android:hint=\"Hint text\" /&gt;\n</code></pre>"},{"location":"components/text-fields/#multi-line-text-field","title":"Multi-line text field","text":"<p>\u6458\u81ea google material design \u6587\u6863</p> <p>Multi-line text fields\uff0c\u5f53\u5149\u6807\u8fbe\u5230\u8f93\u5165\u6846\u8fb9\u7f18\u65f6\uff0c\u6587\u672c\u6846\u4f1a\u4e3a\u6ea2\u51fa\u7684\u6587\u5b57\u81ea\u52a8\u589e\u52a0\u4e00\u884c\uff0c\u4ee5\u4f7f\u6587\u672c\u53ef\u4ee5\u5782\u76f4\u6eda\u52a8\u3002</p> <p>\u8981\u8ba9\u4f60\u7684 <code>EditText</code> \u4e3a\u591a\u884c\uff0c\u9700\u8981\u6dfb\u52a0 <code>android:inputType</code> \u5c5e\u6027\uff0c\u5e76\u4e14\u8bbe\u7f6e\u5176\u503c\u4e3a <code>textMultiLine</code> \u3002</p> <pre><code>&lt;EditText\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:inputType=\"textMultiLine\"\n    android:hint=\"Hint text\" /&gt;\n</code></pre>"},{"location":"components/text-fields/#full-width-text-field","title":"Full-width text field","text":"<p>\u6458\u81ea google material design \u6587\u6863</p> <p>Full-width text fields\uff08\u548c\u7236\u5e03\u5c40\u7b49\u5bbd\uff09\u9002\u7528\u4e8e\u66f4\u6df1\u5165\u590d\u6742\u7684\u5de5\u4f5c\u3002</p> <p>I. \u5728\u4f60\u7684 <code>styles.xml</code> \u4e2d\u58f0\u660e\u4f60\u81ea\u5b9a\u4e49\u7684\u6837\u5f0f\u3002</p> <pre><code>&lt;style name=\"FullWidthEditText\" parent=\"Widget.AppCompat.EditText\"&gt;\n    &lt;item name=\"android:padding\"&gt;20dp&lt;/item&gt;\n    &lt;item name=\"android:background\"&gt;@null&lt;/item&gt;\n    &lt;item name=\"android:textSize\"&gt;@dimen/abc_text_size_subhead_material&lt;/item&gt;\n&lt;/style&gt;\n</code></pre> <p>II. \u5728\u4f60\u7684 <code>EditText</code> \u58f0\u660e\u91cc\u8bbe\u7f6e <code>style</code> \u5c5e\u6027\u503c\u4e3a\u4f60\u81ea\u5b9a\u4e49\u7684\u6837\u5f0f\u3002</p> <pre><code>&lt;EditText\n    style=\"@style/FullWidthEditText\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:hint=\"Subject\" /&gt;\n</code></pre>"},{"location":"components/text-fields/#floating-labels","title":"Floating labels","text":"<p>\u6458\u81ea  google material design \u6587\u6863</p> <p>\u5f53\u7528\u6237\u5728\u8f93\u5165\u6846\u8f93\u5165\u5b57\u7b26\u65f6\uff0c\u884c\u5185\u7684\u6d6e\u52a8\u6807\u7b7e\u4f1a\u81ea\u52a8\u79fb\u52a8\uff0c\u6d6e\u52a8\u5728\u8f93\u5165\u6846\u7684\u4e0a\u65b9\u3002</p>"},{"location":"components/text-fields/#_3","title":"\u5982\u4f55\u6dfb\u52a0\uff1f","text":"<p>I. \u5728\u4f60\u7684 <code>build.gradle</code> \u6587\u4ef6\u91cc\u6dfb\u52a0\u6700\u65b0\u7248\u672c\u7684 <code>appcompat</code> \u548c <code>design</code> \u5e93\u3002</p> <pre><code>dependencies {\n    compile 'com.android.support:appcompat-v7:X.X.X' // where X.X.X version\n    compile 'com.android.support:design:X.X.X' // where X.X.X version\n}\n</code></pre> <p>II. \u8ba9\u4f60\u7684 activity \u7ee7\u627f <code>android.support.v7.app.AppCompatActivity</code> \u3002</p> <pre><code>public class MainActivity extends AppCompatActivity {\n    ...\n}\n</code></pre> <p>III. \u5728\u4efb\u610f\u7684 <code>layout.xml</code> \u91cc\u58f0\u660e\u4f60\u7684 <code>EditText</code> \uff0c\u5e76\u7528 <code>TextInputLayout</code> \u5305\u88f9\u3002</p> <pre><code>&lt;android.support.design.widget.TextInputLayout\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"&gt;\n\n    &lt;EditText\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:hint=\"@string/Title\" /&gt;\n\n&lt;/android.support.design.widget.TextInputLayout&gt;\n</code></pre> <p>\u5907\u6ce8</p> <p>\u63a7\u4ef6 <code>TextInputLayout</code> \u548c <code>EditText</code> \u90fd\u5177\u6709 <code>android:hint</code> \u5c5e\u6027\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u5b83\u4eec\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u3002</p>"},{"location":"components/text-fields/#_4","title":"\u5982\u4f55\u8bbe\u7f6e\u6837\u5f0f\uff1f","text":"<p>I. \u5728\u4f60\u7684 <code>styles.xml</code> \u91cc\u58f0\u660e\u4f60\u81ea\u5b9a\u4e49\u7684\u6837\u5f0f\u3002</p> <pre><code>&lt;!--Floating label text style--&gt;\n&lt;style name=\"MyHintText\" parent=\"TextAppearance.AppCompat.Small\"&gt;\n    &lt;item name=\"android:textColor\"&gt;@color/pink&lt;/item&gt;\n&lt;/style&gt;\n\n&lt;!--Input field style--&gt;\n&lt;style name=\"MyEditText\" parent=\"Theme.AppCompat.Light\"&gt;\n    &lt;item name=\"colorControlNormal\"&gt;@color/indigo&lt;/item&gt;\n    &lt;item name=\"colorControlActivated\"&gt;@color/pink&lt;/item&gt;\n&lt;/style&gt;\n</code></pre> <p>II. \u8bbe\u7f6e\u4e0a\u9762\u5b9a\u4e49\u7684\u6837\u5f0f\u7ed9\u4f60\u7684 <code>TextInputLayout</code> \u7684 <code>app:hintTextAppearance</code> \u5c5e\u6027 \u548c <code>EditText</code> \u7684 <code>android:theme</code> \u5c5e\u6027\u3002</p> <pre><code>&lt;android.support.design.widget.TextInputLayout\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    app:hintTextAppearance=\"@style/MyHintText\"&gt;\n\n    &lt;EditText\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:hint=\"@string/Title\"\n        android:theme=\"@style/MyEditText\" /&gt;\n\n&lt;/android.support.design.widget.TextInputLayout&gt;\n</code></pre>"},{"location":"components/text-fields/#user-input-errors","title":"User input errors","text":"<p>\u6458\u81ea google material design \u6587\u6863</p> <p>(\u6dfb\u52a0\u4e86\u8fd9\u4e2a\u5c5e\u6027\uff09\u4e00\u65e6\u68c0\u6d4b\u5230\u8f93\u5165\u9519\u8bef\uff0c\u5c31\u4f1a\u5e2e\u52a9\u7528\u6237\u53bb\u89e3\u51b3\u5b83\u3002\u5982\u679c\u68c0\u6d4b\u5230\u8f93\u5165\u9519\u8bef\uff0c\u5c31\u7981\u6b62\u63d0\u4ea4\u8868\u5355\uff1b\uff08\u6216\u8005\uff09\u5982\u679c\u63d0\u4ea4\u8868\u5355\u4e4b\u540e\u68c0\u6d4b\u5230\u9519\u8bef\uff0c\u53ef\u4ee5\u6e05\u695a\u5730\u89e3\u91ca\u9519\u8bef\u5e76\u63d0\u793a\u5982\u4f55\u53bb\u89e3\u51b3\u3002</p>"},{"location":"components/text-fields/#_5","title":"\u5982\u4f55\u6dfb\u52a0\uff1f","text":"<p>I. \u5728\u4f60\u7684 <code>build.gradle</code> \u6587\u4ef6\u91cc\u6dfb\u52a0\u6700\u65b0\u7248\u672c\u7684 <code>appcompat</code> \u548c <code>design</code> \u5e93\u3002</p> <pre><code>dependencies {\n    compile 'com.android.support:appcompat-v7:X.X.X' // where X.X.X version\n    compile 'com.android.support:design:X.X.X' // where X.X.X version\n}\n</code></pre> <p>II. \u8ba9\u4f60\u7684 activity \u7ee7\u627f\u81ea <code>android.support.v7.app.AppCompatActivity</code> \u3002</p> <pre><code>public class MainActivity extends AppCompatActivity {\n    ...\n}\n</code></pre> <p>III. \u5728\u4efb\u610f\u7684 <code>layout.xml</code> \u58f0\u660e\u4f60\u7684 <code>EditText</code> \uff0c\u5e76\u7528 <code>TextInputLayout</code> \u5305\u88f9\u5b83\u3002</p> <pre><code>&lt;android.support.design.widget.TextInputLayout\n    android:id=\"@+id/inputLayout\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    app:errorEnabled=\"true\"&gt;\n\n    &lt;EditText\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:hint=\"@string/First_name\" /&gt;\n\n&lt;/android.support.design.widget.TextInputLayout&gt;\n</code></pre> <p>IV. \u8981\u5c55\u793a\u6216\u8005\u9690\u85cf error \u9700\u8981\u7528\u5230 <code>TextInputLayout</code> \u7684 <code>setError</code> \u65b9\u6cd5\u3002</p> <pre><code>TextInputLayout inputLayout = (TextInputLayout) findViewById(R.id.inputLayout);\ninputLayout.setError(\"First name is required\"); // show error\ninputLayout.setError(null); // hide error\n</code></pre> <p>\u5907\u6ce8</p> <p>\u5728 <code>TextInputLayout</code> \u91cc\u58f0\u660e <code>app:errorEnabled=\"true\"</code> \u5c5e\u6027\u9700\u8981\u5728 <code>EditText</code> \u4e0b\u9762\u7ed9\u9519\u8bef\u63d0\u793a\u6807\u7b7e\u9884\u7559\u7a7a\u95f4\u3002</p>"},{"location":"components/text-fields/#_6","title":"\u5982\u4f55\u8bbe\u7f6e\u6837\u5f0f\uff1f","text":"<p>I. \u5728 <code>styles.xml</code> \u58f0\u660e\u4f60\u81ea\u5b9a\u4e49\u6837\u5f0f\u3002</p> <pre><code>&lt;!--Error label text style--&gt;\n&lt;style name=\"MyErrorText\" parent=\"TextAppearance.AppCompat.Small\"&gt;\n    &lt;item name=\"android:textColor\"&gt;@color/pink&lt;/item&gt;\n&lt;/style&gt;\n\n&lt;!--Input field style--&gt;\n&lt;style name=\"MyEditText\" parent=\"Theme.AppCompat.Light\"&gt;\n    &lt;item name=\"colorControlNormal\"&gt;@color/indigo&lt;/item&gt;\n    &lt;item name=\"colorControlActivated\"&gt;@color/pink&lt;/item&gt;\n&lt;/style&gt;\n</code></pre> <p>II. \u8bbe\u7f6e\u4e0a\u9762\u5b9a\u4e49\u7684\u6837\u5f0f\u7ed9\u4f60\u7684 <code>TextInputLayout</code> \u7684 <code>app:errorTextAppearance</code> \u5c5e\u6027 \u548c <code>EditText</code> \u7684 <code>android:theme</code> \u5c5e\u6027\u3002</p> <pre><code>&lt;android.support.design.widget.TextInputLayout\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    app:errorTextAppearance=\"@style/MyHintText\"\n    app:errorEnabled=\"true\"&gt;\n\n    &lt;EditText\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:hint=\"@string/Title\"\n        android:theme=\"@style/MyEditText\" /&gt;\n\n&lt;/android.support.design.widget.TextInputLayout&gt;\n</code></pre>"},{"location":"components/text-fields/#character-counter","title":"Character counter","text":"<p>From google material design documentation.</p> <p>Use a character counter in fields where a character restriction is in place.</p>"},{"location":"components/text-fields/#how-to-add","title":"How to add?","text":"<p>I. In your <code>build.gradle</code> add latest <code>appcompat</code> and <code>design</code> libraries. <pre><code>dependencies {\n    compile 'com.android.support:appcompat-v7:X.X.X' // where X.X.X version\n    compile 'com.android.support:design:X.X.X' // where X.X.X version\n}\n</code></pre></p> <p>II. Make your activity extend <code>android.support.v7.app.AppCompatActivity</code>.</p> <pre><code>public class MainActivity extends AppCompatActivity {\n    ...\n}\n</code></pre> <p>III. Declare your <code>EditText</code> inside any <code>layout.xml</code> file and wrap it with <code>TextInputLayout</code>. Add <code>app:counterEnabled</code> attribute and set its value to <code>true</code>. To restrict maximum characters count set some integer value to <code>app:counterMaxLength</code> attribute. <pre><code>&lt;android.support.design.widget.TextInputLayout\n        android:id=\"@+id/inputLayout\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        app:counterEnabled=\"true\"\n        app:counterMaxLength=\"140\"&gt;\n\n    &lt;EditText\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:hint=\"hint text\" /&gt;\n\n&lt;/android.support.design.widget.TextInputLayout&gt;\n</code></pre></p>"},{"location":"components/text-fields/#how-to-style","title":"How to style?","text":"<p> To define a custom style for the overflow.</p> <p>I. Define the text style. <pre><code>&lt;!--Overflow label text style--&gt;\n&lt;style name=\"MyOverflowText\" parent=\"TextAppearance.AppCompat.Small\"&gt;\n    &lt;item name=\"android:textColor\"&gt;@color/deep_orange&lt;/item&gt;\n&lt;/style&gt;\n</code></pre></p> <p>II. Apply this styles to your <code>TextInputLayout</code> via <code>app:counterOverflowTextAppearance</code> attribute. <pre><code>app:counterOverflowTextAppearance=\"@style/MyOverflowText\"\n</code></pre></p>"},{"location":"components/text-fields/#password-toggle","title":"Password toggle","text":"<p>From google material design documentation.</p> <p>When the visibility icon is displayed with a text field, it indicates whether or not that field\u2019s input is visible. A text field\u2019s visibility may be toggled on or off using the icon.</p>"},{"location":"components/text-fields/#how-to-add_1","title":"How to add?","text":"<p>I. In your <code>build.gradle</code> add latest <code>appcompat</code> and <code>design</code> libraries.</p> <pre><code>dependencies {\n    compile 'com.android.support:appcompat-v7:X.X.X' // where X.X.X version\n    compile 'com.android.support:design:X.X.X' // where X.X.X version\n}\n</code></pre> <p>II. Make your activity extend <code>android.support.v7.app.AppCompatActivity</code>.</p> <pre><code>public class MainActivity extends AppCompatActivity {\n    ...\n}\n</code></pre> <p>III. Declare your <code>EditText</code> inside any <code>layout.xml</code> file and wrat it with <code>TextInputLayout</code>. Add <code>app:passwordToggleEnabled</code> and set its value to <code>true</code>. <pre><code>&lt;android.support.design.widget.TextInputLayout\n        android:id=\"@+id/inputLayout\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        app:passwordToggleEnabled=\"true\"&gt;\n\n    &lt;EditText\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:hint=\"Password\" /&gt;\n\n&lt;/android.support.design.widget.TextInputLayout&gt;\n</code></pre></p> <p>Note</p> <p>Declare <code>app:passwordToggleContentDescription</code> attribute inside <code>TextInputLayout</code> for accessibility purposes.</p>"},{"location":"components/text-fields/#how-to-style_1","title":"How to style?","text":"<p>To change the color of the password toggle icon, use the <code>app:passwordToggleTint</code> attribute: <pre><code>&lt;android.support.design.widget.TextInputLayout\n        android:id=\"@+id/inputLayout\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        app:passwordToggleEnabled=\"true\"\n        app:passwordToggleTint=\"@color/colorAccent\"&gt;\n\n    &lt;EditText\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:hint=\"Password\" /&gt;\n\n&lt;/android.support.design.widget.TextInputLayout&gt;\n</code></pre></p> <p>Moreover, you can specify the blending mode with the <code>app:passwordToggleTintMode</code> attribute.</p>"},{"location":"components/text-fields/#icon","title":"Icon","text":"<p>To change the password toggle icon, use the <code>app:passwordToggleDrawable</code> attribute: <pre><code>&lt;android.support.design.widget.TextInputLayout\n        android:id=\"@+id/inputLayout\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        app:passwordToggleEnabled=\"true\"\n        app:passwordToggleDrawable=\"@drawable/ic_lock\"&gt;\n\n    &lt;EditText\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:hint=\"Password\" /&gt;\n\n&lt;/android.support.design.widget.TextInputLayout&gt;\n</code></pre></p> <p>Use a StateListDrawable with the <code>android:state_checked</code> attribute to use separate drawables for each toggle state. Moreover, choose an AnimatedStateListDrawable to animate the drawables between states.</p> <p>\u7ffb\u8bd1\u6c34\u5e73\u6709\u9650\uff0c\u6b22\u8fce\u6279\u8bc4\u6307\u6b63</p> <p>\u539f\u6587\u4f5c\u8005: Volodymyr Yatsykiv \u539f\u6587\u94fe\u63a5: Text Fields</p>"},{"location":"components/toolbars/","title":"Toolbars","text":"<p>\u6458\u81ea google material design \u6587\u6863</p> <p>Toolbars appear a step above the sheet of paper affected by their actions. When sheets scroll underneath toolbars, they are clipped and cannot pass through to the opposite side.</p>"},{"location":"components/toolbars/#_1","title":"\u5982\u4f55\u6dfb\u52a0?","text":"<p>I. \u5728\u4f60\u7684 <code>build.grade</code> \u6587\u4ef6\u91cc\u6dfb\u52a0\u6700\u65b0\u7248\u672c\u7684 <code>appcompat</code> \u5e93\u3002</p> <pre><code>dependencies {\n    compile 'com.android.support:appcompat-v7:X.X.X'\n    // where X.X.X version\n}\n</code></pre> <p>II. \u4f7f\u4f60\u7684 activity \u7ee7\u627f\u81ea <code>android.support.v7.app.AppCompatActivity</code>.</p> <pre><code>public class MyActivity extends AppCompatActivity {\n   ...\n}\n</code></pre> <p>III. \u5728 <code>layout.xml</code> \u6587\u4ef6\u5185\u58f0\u660e\u4f60\u7684 <code>Toolbar</code>\u3002</p> <pre><code>&lt;android.support.v7.widget.Toolbar\n    android:layout_width=\"fill_parent\"\n    android:layout_height=\"?attr/actionBarSize\"\n    android:background=\"?colorPrimary\"\n    app:theme=\"@style/ThemeOverlay.AppCompat.Dark.ActionBar\" /&gt;\n</code></pre>"},{"location":"components/toolbars/#_2","title":"\u5982\u4f55\u8bbe\u7f6e\u6837\u5f0f?","text":"<p>I. \u5728\u4f60\u7684 <code>style.xml</code> \u6587\u4ef6\u91cc\u58f0\u660e\u81ea\u5b9a\u4e49\u7684\u6837\u5f0f\u3002</p> <p><pre><code>&lt;style name=\"ToolbarTextAppearance\"&gt;\n    &lt;item name=\"android:fontFamily\"&gt;sans-serif-condensed&lt;/item&gt;\n    &lt;item name=\"android:textColor\"&gt;@android:color/white&lt;/item&gt;\n    &lt;item name=\"android:shadowDx\"&gt;1&lt;/item&gt;\n    &lt;item name=\"android:shadowDy\"&gt;1&lt;/item&gt;\n    &lt;item name=\"android:shadowRadius\"&gt;2&lt;/item&gt;\n    &lt;item name=\"android:shadowColor\"&gt;?colorAccent&lt;/item&gt;\n&lt;/style&gt;\n\n&lt;style name=\"ToolbarTextAppearance.Title\"&gt;\n    &lt;item name=\"android:textSize\"&gt;20sp&lt;/item&gt;\n&lt;/style&gt;\n\n&lt;style name=\"ToolbarTextAppearance.Subtitle\"&gt;\n    &lt;item name=\"android:textSize\"&gt;14sp&lt;/item&gt;\n&lt;/style&gt;\n\n&lt;style name=\"MyToolbar\"&gt;\n    &lt;item name=\"theme\"&gt;@style/ThemeOverlay.AppCompat.Dark&lt;/item&gt;\n    &lt;item name=\"android:background\"&gt;?colorPrimary&lt;/item&gt;\n    &lt;item name=\"android:elevation\"&gt;4dp&lt;/item&gt;\n&lt;/style&gt;\n</code></pre> II. \u5e94\u7528\u6837\u5f0f\u5230\u4f60\u7684 <code>Toolbar</code> \u7684 <code>titleTextAppearance</code> \u548c <code>subtitleTextAppearance</code> \u5c5e\u6027\u3002</p> <pre><code>&lt;android.support.v7.widget.Toolbar\n    android:id=\"@+id/toolbar\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"?actionBarSize\"\n    app:title=\"Toolbar\"\n    app:subtitle=\"Toolbars are amazing\"\n    app:titleTextAppearance=\"@style/ToolbarTextAppearance.Title\"\n    app:subtitleTextAppearance=\"@style/ToolbarTextAppearance.Subtitle\"\n    style=\"@style/MyToolbar\" /&gt;\n</code></pre>"},{"location":"components/toolbars/#toolbar","title":"Toolbar \u83dc\u5355\u56fe\u6807","text":"<p>I. \u521b\u5efa\u6bcf\u4e00\u4e2a Action \u9879\u3002</p> <pre><code>&lt;menu xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"&gt;\n    &lt;item\n        android:id=\"@+id/action_favorite\"\n        android:icon=\"@drawable/ic_favorite\"\n        app:showAsAction=\"always\"/&gt;\n    &lt;item\n        android:id=\"@+id/action_search\"\n        android:icon=\"@drawable/ic_search\"\n        app:showAsAction=\"always\"/&gt;\n    &lt;item\n        android:id=\"@+id/action_settings\"\n        android:orderInCategory=\"100\"\n        android:title=\"@string/action_settings\"\n        app:showAsAction=\"never\"/&gt;\n&lt;/menu&gt;\n</code></pre> <p>II. \u901a\u8fc7 <code>inflateMenu</code> \u65b9\u6cd5\u751f\u6210\u4f60\u7684\u83dc\u5355\u3002</p> <pre><code>Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);\ntoolbar.inflateMenu(R.menu.main);\n</code></pre> <p>II. \u4f7f\u4f60\u7684 activity \u5b9e\u73b0 <code>Toolbar.OnMenuItemClickListener</code>.</p> <pre><code>public class MyActivity extends AppCompatActivity implements Toolbar.OnMenuItemClickListener {\n</code></pre> <p>III. \u5728\u4f60\u7684 Toolbar\u4e0a\u8bbe\u7f6e\u5b9e\u73b0\u4e86 listener \u7684 Activity\u7684\u5f15\u7528\u3002</p> <pre><code>toolbar.setOnMenuItemClickListener(this);\n</code></pre> <p>IV. \u5728 <code>onMenuItemClick</code> \u65b9\u6cd5\u5185\u5b9e\u73b0\u4f60\u7684 actions\u3002</p> <pre><code>@Override\npublic boolean onMenuItemClick(MenuItem item) {\n    switch (item.getItemId()) {\n        case R.id.action_favorite:\n            Toast.makeText(this, \"Favorite\", Toast.LENGTH_SHORT).show();\n            return true;\n\n        case R.id.action_search:\n            Toast.makeText(this, \"Search\", Toast.LENGTH_SHORT).show();\n            return true;\n    }\n\n    return true;\n}\n</code></pre>"},{"location":"components/toolbars/#toolbar_1","title":"Toolbar \u7684\u5bfc\u822a\u8fd4\u56de\u56fe\u6807","text":"<p>I. \u5728\u4f60\u7684 <code>styles.xml</code> \u6587\u4ef6\u5185\u5b9a\u4e49\u81ea\u5b9a\u4e49\u6837\u5f0f\u3002</p> <pre><code>&lt;style name=\"MyToolbar\"&gt;\n    &lt;item name=\"theme\"&gt;@style/ThemeOverlay.AppCompat.Dark&lt;/item&gt;\n    &lt;item name=\"navigationIcon\"&gt;@drawable/abc_ic_ab_back_mtrl_am_alpha&lt;/item&gt;\n    &lt;item name=\"android:background\"&gt;?colorPrimary&lt;/item&gt;\n    &lt;item name=\"android:elevation\"&gt;4dp&lt;/item&gt;\n&lt;/style&gt;\n</code></pre> <p>II. \u901a\u8fc7 <code>style</code> \u5c5e\u6027\u5e94\u7528\u8fd9\u4e2a\u6837\u5f0f\u5230\u4f60\u7684 <code>Toolbar</code>\u3002</p> <pre><code>&lt;android.support.v7.widget.Toolbar\n    android:id=\"@+id/toolbar\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"?actionBarSize\"\n    app:title=\"Toolbar\"\n    app:subtitle=\"Toolbars are amazing\"\n    style=\"@style/MyToolbar\" /&gt;\n</code></pre> <p>III. \u8bbe\u7f6e\u5bfc\u822a\u8fd4\u56de\u52a8\u4f5c\u7684\u76d1\u542c\u5668\u3002</p> <pre><code>toolbar.setNavigationOnClickListener(new View.OnClickListener() {\n    @Override\n    public void onClick(View v) {\n        onBackPressed();\n    }\n});\n</code></pre>"},{"location":"components/toolbars/#toolbar_2","title":"Toolbar \u7684\u7559\u767d","text":"<p>I. \u5728\u4f60\u7684 <code>styles.xml</code> \u6587\u4ef6\u5185\u5b9a\u4e49\u81ea\u5b9a\u4e49\u6837\u5f0f\u3002</p> <pre><code>&lt;style name=\"MyToolbar\"&gt;\n    &lt;item name=\"theme\"&gt;@style/ThemeOverlay.AppCompat.Dark&lt;/item&gt;\n    &lt;item name=\"navigationIcon\"&gt;@drawable/abc_ic_ab_back_mtrl_am_alpha&lt;/item&gt;\n    &lt;item name=\"titleMarginTop\"&gt;?actionBarSize&lt;/item&gt;\n    &lt;item name=\"android:background\"&gt;?colorPrimary&lt;/item&gt;\n    &lt;item name=\"android:elevation\"&gt;4dp&lt;/item&gt;\n&lt;/style&gt;\n</code></pre> <p>II. \u901a\u8fc7 <code>style</code> \u5c5e\u6027\u5e94\u7528\u8fd9\u4e2a\u6837\u5f0f\u5230\u4f60\u7684 <code>Toolbar</code>\u3002</p> <pre><code>&lt;android.support.v7.widget.Toolbar\n    android:id=\"@+id/toolbar\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"112dp\"\n    app:title=\"Toolbar\"\n    app:subtitle=\"Toolbars are really cool\"\n    style=\"@style/MyToolbar\" /&gt;\n</code></pre> <p>\u7ffb\u8bd1\u6c34\u5e73\u6709\u9650\uff0c\u6b22\u8fce\u6279\u8bc4\u6307\u6b63</p> <p>\u539f\u6587\u4f5c\u8005\uff1aSa\u00fal Molinero \u539f\u6587\u5730\u5740\uff1aToolbars \u8bd1\u8005\uff1a\u8109\u8109\u4e0d\u5f97\u8bed \u6821\u5bf9\uff1aAilurus</p>"},{"location":"patterns/data-formats/","title":"Data formats","text":""},{"location":"patterns/data-formats/#date-time","title":"Date &amp; time","text":"<p>From the Google material design documentation</p> <p>How you format the date and time depends on a few factors:</p> <ul> <li>If the time or date is the current one</li> <li>Whether you are using the 12-hour or 24-hour clock</li> <li>How specific you need to be</li> </ul> <p>I. Declare a <code>TextView</code> in your layout file.</p> <pre><code>&lt;TextView\n    android:id=\"@+id/hora\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    /&gt;\n</code></pre> <p>II. In your Activity, get the time format which corresponds the locale and configuration of the device.</p> <pre><code>// import android.text.format.DateFormat\nDateFormat timeFormat = DateFormat.getTimeFormat(context);\n</code></pre> <p>III. Get the text with the current time and insert it in the  <code>TextView</code></p> <pre><code>TextView hourTextView = (TextView) findViewById(R.id.hourTextView);\nhoraTextView.setText(timeFormat.format(new Date()));\n</code></pre> <p></p> <p>I. Declare a <code>TextView</code> in your layout file.</p> <p><pre><code>&lt;TextView\n    android:id=\"@+id/fecha\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    /&gt;\n</code></pre> II. In your <code>Activity</code>, get the format of the date which corresponds to the locale and configuration of the devices. Depending on the available space you can use medium, long or numeric format.</p> <pre><code>DateFormat numericDateFormat =\n    DateFormat.getDateFormat(context);\n\nDateFormat mediumDateFormat =\n    DateFormat.getMediumDateFormat(context);\n\nDateFormat longDateFormat =\n    DateFormat.getLongDateFormat(context);\n</code></pre> <p>III. Get the text with the actual date and put it in your  <code>TextView</code></p> <pre><code>TextView fechaTextView = (TextView) findViewById(R.id.dateTextView);\nfechaTextView.setText(longDateFormat.format(new Date()));\n</code></pre> <p>Note</p> <p>The <code>DateFormat</code> class allows many configurations according to your specific needs, for more information see the development guides.</p>"},{"location":"patterns/data-formats/#data-redaction-and-truncation","title":"Data redaction and truncation","text":""},{"location":"patterns/data-formats/#redacting-numbers","title":"Redacting numbers","text":"<p>!!! note \"From Google material design documentation\".     Midline ellipses [\u2022 \u2022 \u2022] are three-bullet glyphs used to represent numeric truncation and the redaction of sensitive data, such as credit card, debit card, and Social Security numbers.</p> <p>I. Declare a <code>TextView</code> in the layout of your <code>Activity</code>.</p> <pre><code>&lt;TextView\n   android:id=\"@+id/numero_tarjeta\"\n   android:layout_width=\"wrap_content\"\n   android:layout_height=\"wrap_content\"\n   /&gt;\n</code></pre> <p>II. Get the characters corresponding to the points and short spaces.</p> <pre><code>String space = \"\\u0020\";\nString thinSpace = \"\\u2006\";\nString bullet = \"\\u2022\";\n</code></pre> <p>III. Build the final text pattern separating the points with short spaces. Between the text and ellipsis must have two normal spaces, and between the ellipsis and the remaining numbers must be just one short space.</p> <pre><code>String creditCardFinalDigits = \"1234\";\nString finalText = \"Visa\" + space + space + bullet + thinSpace + bullet + thinSpace + bullet + thinSpace + creditCardFinalDigits;\n</code></pre> <p>IV. Add your text to the <code>TextView</code>.</p> <pre><code>TextView cardTextView = (TextView) findViewById(R.id.creditcard_textview);\ncardTextView.setText(finalText);\n</code></pre>"},{"location":"patterns/data-formats/#redacting-letters","title":"Redacting letters","text":"<p>From Google material design documentation.</p> <p>Baseline ellipses [...] represent letters, words or phrases that aren\u2019t shown. They also represent text truncation of a name or email address.</p> <p>To automatically place ellipses depending on the space available:</p> <p>I. Declare a <code>TextView</code> in the layout of your <code>Activity</code> with the attributes <code>lines=\"1\"</code> and <code>ellipsize=\"end\"</code>.</p> <pre><code>&lt;TextView\n    android:id=\"@+id/titleTextView\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:lines=\"1\"\n    android:ellipsize=\"end\"\n    /&gt;\n</code></pre> <p>II. Add a large text to the <code>TextView</code>.</p> <pre><code>TextView titleTextView = (TextView) findViewById(R.id.titleTextView);\ntitleTextView.setText(R.string.bat);\n</code></pre>"},{"location":"patterns/launch-screen/","title":"Launch screens","text":"<p>From google material design documentation.</p> <p>The launch screen is a user\u2019s first experience of your application.</p> <p>Because launching your app while displaying a blank canvas increases its perceived loading time, consider using a placeholder UI or a branded launch screen.</p>"},{"location":"patterns/launch-screen/#how-to-add","title":"How to add?","text":"<p>I. Declare custom <code>drawable.xml</code> file with <code>items</code> for launch screen background.</p> <pre><code>&lt;layer-list xmlns:android=\"http://schemas.android.com/apk/res/android\"&gt;\n    &lt;item\n        android:drawable=\"@color/blue\"/&gt;\n\n    &lt;item&gt;\n        &lt;bitmap\n            android:gravity=\"center\"\n            android:src=\"@drawable/logo\"/&gt;\n    &lt;/item&gt;\n&lt;/layer-list&gt;\n</code></pre> <p>II. Declare custom style in your <code>styles.xml</code> using the new <code>drawable</code> as background.</p> <pre><code>&lt;style name=\"SplashTheme\" parent=\"Theme.AppCompat.NoActionBar\"&gt;\n    &lt;item name=\"android:windowBackground\"&gt;@drawable/background_splash&lt;/item&gt;\n&lt;/style&gt;\n</code></pre> <p>Note</p> <p>If your API Level is greater than v19, you can make Status Bar and Navigation Bar translucent setting attributes <code>android:windowTranslucentStatus</code> and <code>android:windowTranslucentNavigation</code> to <code>true</code>.</p> <p>III. Apply this style to your splash activity via <code>android:theme</code> attribute in your <code>AndroidManifest.xml</code> file.</p> <pre><code>&lt;activity\n    android:name=\".SplashActivity\"\n    android:theme=\"@style/SplashTheme\"&gt;\n    &lt;intent-filter&gt;\n        &lt;action android:name=\"android.intent.action.MAIN\" /&gt;\n\n        &lt;category android:name=\"android.intent.category.LAUNCHER\" /&gt;\n    &lt;/intent-filter&gt;\n&lt;/activity&gt;\n</code></pre>"},{"location":"patterns/navigation-drawer/","title":"Navigation drawer","text":"<p>From Google material design documentation and android training.</p> <p>The navigation drawer slides in from the left. It is a common pattern found in Google apps and follows the keylines and metrics for lists.</p> <p>Normally represents the app\u2019s main navigation options on the left edge of the screen. It is hidden most of the time, but is revealed when the user swipes a finger from the left edge of the screen or, while at the top level of the app, the user touches the app icon in the toolbar.</p>"},{"location":"patterns/navigation-drawer/#how-to-add","title":"How to add?","text":"<p>I. In your <code>build.gradle</code> file add the latest <code>appcompat</code>, <code>design</code> and <code>support-v4</code> libraries.</p> <pre><code>compile 'com.android.support:appcompat-v7:X.X.X'\ncompile 'com.android.support:design:X.X.X'\ncompile 'com.android.support:support-v4:X.X.X'\n// X.X.X specify the version\n</code></pre> <p>II. Declare <code>DrawerLayout</code> as your root <code>layout</code> container, inside you will have two views, one containing your main layout and another containing drawer items. <pre><code>&lt;android.support.v4.widget.DrawerLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:id=\"@+id/drawer_layout\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:fitsSystemWindows=\"true\"&gt;\n\n  &lt;include layout=\"@layout/content_main\"/&gt;\n\n  &lt;android.support.design.widget.NavigationView\n      android:id=\"@+id/nav_view\"\n      android:layout_width=\"wrap_content\"\n      android:layout_height=\"match_parent\"\n      android:layout_gravity=\"start\"\n      android:fitsSystemWindows=\"true\"\n      app:headerLayout=\"@layout/drawer_header\"\n      app:menu=\"@menu/drawer_menu\"/&gt;\n\n&lt;/android.support.v4.widget.DrawerLayout&gt;\n</code></pre> In above example, <code>@layout/content_main</code> contains your main content and <code>NavigationView</code> drawers items.</p> <p>III. Create the <code>menu</code> file in your values folder <code>values/menu.xml</code>. <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;menu xmlns:android=\"http://schemas.android.com/apk/res/android\"&gt;\n  &lt;group android:checkableBehavior=\"single\"&gt;\n    &lt;item\n        android:id=\"@+id/nav_inbox\"\n        android:checked=\"true\"\n        android:icon=\"@drawable/ic_inbox_grey600_36dp\"\n        android:title=\"@string/inbox\"/&gt;\n    &lt;item\n        android:id=\"@+id/nav_starred\"\n        android:icon=\"@drawable/ic_star_grey600_36dp\"\n        android:title=\"@string/starred\"/&gt;\n    &lt;!-- more items --&gt;\n\n    &lt;item\n        android:id=\"@+id/subheader\"\n        android:title=\"@string/subheader\"&gt;\n      &lt;menu&gt;\n        &lt;item\n            android:id=\"@+id/nav_all_email\"\n            android:icon=\"@drawable/ic_email_grey600_36dp\"\n            android:title=\"@string/all_email\"/&gt;\n        &lt;!-- more items --&gt;\n      &lt;/menu&gt;\n    &lt;/item&gt;\n  &lt;/group&gt;\n&lt;/menu&gt;\n</code></pre> The menu structure is hierarchical, that let's you separate your items in categories.</p> <p>IV. To add a header for your drawer, create a layout file in <code>layout/drawer_header.xml</code>. <pre><code>&lt;LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"@dimen/drawer_header_height\"\n    android:gravity=\"bottom\"\n    android:background=\"@drawable/navigation_background\"\n    android:orientation=\"vertical\"\n    android:padding=\"@dimen/activity_horizontal_margin\"\n    android:theme=\"@style/ThemeOverlay.AppCompat.Dark\"&gt;\n\n  &lt;ImageView\n      android:id=\"@+id/drawer_profile_image\"\n      android:layout_width=\"@dimen/drawer_header_profile\"\n      android:layout_height=\"@dimen/drawer_header_profile\"\n      android:layout_marginBottom=\"@dimen/standard_margin\"\n      android:scaleType=\"centerCrop\"\n      android:src=\"@drawable/alexandru_simonescu\"\n /&gt;\n\n  &lt;TextView\n      android:id=\"@+id/name\"\n      android:layout_width=\"match_parent\"\n      android:layout_height=\"wrap_content\"\n      android:text=\"Alexandru Simonescu\"\n      android:textAppearance=\"@style/TextAppearance.AppCompat.Body1\"\n      android:textStyle=\"bold\"\n      /&gt;\n\n  &lt;TextView\n      android:id=\"@+id/email\"\n      android:layout_width=\"match_parent\"\n      android:layout_height=\"wrap_content\"\n      android:text=\"hi@alexsimo.com\"\n      android:textAppearance=\"@style/TextAppearance.AppCompat.Body1\"\n      style=\"@style/Widget.AppCompat.Spinner\"\n      /&gt;\n\n&lt;/LinearLayout&gt;\n</code></pre></p> <p>V. In your activity find the <code>NavigationView</code> and <code>NavigationDrawer</code> and set their listeners.</p> <p>Drawer setup. <pre><code>private void setupDrawer() {\n    drawerLayout = (DrawerLayout) findViewById(R.id.drawer_layout);\n    drawerLayout.setDrawerListener(new DrawerLayout.DrawerListener() {\n      @Override public void onDrawerSlide(View drawerView, float slideOffset) {\n\n      }\n\n      @Override public void onDrawerOpened(View drawerView) {\n\n      }\n\n      @Override public void onDrawerClosed(View drawerView) {\n\n      }\n\n      @Override public void onDrawerStateChanged(int newState) {\n\n      }\n    });\n  }\n</code></pre></p> <p>Note</p> <p>To achieve the round image effect you can use Google's official way.</p> <p>Example using Google's <code>RoundedBitmapDrawable</code>:</p> <pre><code>Bitmap bitmap = BitmapFactory.decodeResource(getResources(), R.drawable.avatar);\n\nRoundedBitmapDrawable rounded =   RoundedBitmapDrawableFactory.create(getResources(), avatar);\n\nrounded.setCornerRadius(bitmap.getWidth());\n\nImageView drawerProfile = (ImageView) drawerLayout.findViewById(R.id.drawer_profile_image);\ndrawerProfile.setImageDrawable(rounded);\n</code></pre> <p>NavigationView setup.</p> <pre><code>public void setupDrawerContent(NavigationView navigationView) {\n    navigationView.setNavigationItemSelectedListener(\n        new NavigationView.OnNavigationItemSelectedListener() {\n          @Override\n          public boolean onNavigationItemSelected(MenuItem item) {\n            item.setChecked(true);\n            // manage menu item click\n            drawerLayout.closeDrawers();\n            return true;\n          }\n        });\n  }\n</code></pre> <p>VI. If needed you can give some basic styling using the properties: <pre><code>android:background=\"@color/colorDrawer\"\napp:itemBackground=\"@color/colorDrawerItem\"\n</code></pre> The drawables colors should be selector defining for each pressed state - focused, checked, active, etc.</p> <p>Menu item background. <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;selector xmlns:android=\"http://schemas.android.com/apk/res/android\"&gt;\n  &lt;item android:drawable=\"@drawable/button_pressed\"\n      android:state_pressed=\"true\"/&gt;\n  &lt;item android:drawable=\"@drawable/button_focused\"\n      android:state_focused=\"true\"/&gt;\n  &lt;item android:drawable=\"@drawable/button_focused\"\n      android:state_hovered=\"true\"/&gt;\n  &lt;item android:drawable=\"@drawable/button_normal\"/&gt;\n&lt;/selector&gt;\n</code></pre></p>"},{"location":"patterns/notifications/","title":"Notifications","text":""},{"location":"patterns/notifications/#notifications-with-text","title":"Notifications with text","text":"<p>\u6458\u81ea Google material design \u6587\u6863</p> <p>\u5728\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u91cc\uff0c\u4f7f\u7528 Notifications \u544a\u77e5\u4f60\u7684 APP \u7528\u6237\u4e00\u4e9b\u76f8\u5173\u548c\u53ca\u65f6\u7684\u4fe1\u606f\u3002\u5f88\u591a\u573a\u666f\u4e0b\uff0c\u4f60\u90fd\u53ef\u4ee5\u521b\u5efa notifications \u6765\u5438\u5f15\u6ce8\u610f\uff0c\u5982\u670b\u53cb\u53d1\u6765\u4fe1\u606f\uff0c\u4ea4\u901a\u72b6\u51b5\u4e0d\u597d\u7684\u65f6\u5019\u63d0\u9192\u901a\u52e4\u72b6\u51b5\uff0c\u5b89\u88c5\u5e94\u7528\u5b8c\u6210\u7684\u65f6\u5019\u5c55\u793a\u4e00\u4e2a\u8fdb\u5ea6\u6761\u7b49\u3002</p> <p>Notifications should be synced to all of a user\u2019s devices.</p>"},{"location":"patterns/notifications/#_1","title":"\u5982\u4f55\u6dfb\u52a0\uff1f","text":"<p>I. \u5728\u4f60\u7684 <code>build.gradle</code> \u6587\u4ef6\u91cc\u6dfb\u52a0\u6700\u65b0\u7684 <code>appcompat</code> \u5e93\u3002</p> <pre><code>dependencies {\n    compile 'com.android.support:appcompat-v7:X.X.X'\n    // X.X.X specify the version\n}\n</code></pre> <p>II. \u83b7\u53d6\u4e00\u4e2a <code>NotificationCompat.Builder</code> \u5b9e\u4f8b\u3002</p> <pre><code>NotificationCompat.Builder builder = new NotificationCompat.Builder(context);\n</code></pre> <p>III. \u4f7f\u7528 <code>Notification.Builder</code> \u521b\u5efa\u4e00\u4e2a <code>Notification</code> \u3002</p> <pre><code>Notification notification = builder\n    .setContentTitle(\"Title\")\n    .setContentText(\"This is a notification!\")\n.setSmallIcon(R.drawable.ic_notifications_white_small)\n    .build();\n</code></pre> <p>IV. \u4f7f\u7528 <code>NotificationManagerCompat</code> \u7684 <code>notify</code> \u65b9\u6cd5\u5c55\u793a\u4f60\u8bbe\u7f6e\u4e86 id \u7684\u90a3\u4e2a <code>Notification</code> \u3002</p> <pre><code>NotificationManagerCompat notificationManager =\n    NotificationManagerCompat.from(context);\n\nnotificationManager.notify(0x1234, notification);\n</code></pre> <p>\u5907\u6ce8</p> <p>\u4e3a\u4e86\u663e\u793a\u901a\u77e5\uff0c\u6807\u9898\u3001\u6587\u5b57\u3001\u5c0f\u56fe\u6807\u662f\u5f3a\u5236\u6027\u5fc5\u987b\u8981\u8bbe\u7f6e\u7684\u3002</p>"},{"location":"patterns/notifications/#_2","title":"\u5982\u4f55\u8bbe\u7f6e\u6837\u5f0f?","text":"<p>\u5728\u4f60\u7684 notification \u91cc\u4f7f\u7528 <code>NotificationCompat.Builder</code> \u7684 <code>setColor(int color)</code> \u65b9\u6cd5\u7ed9\u5706\u5f62\u80cc\u666f\u8bbe\u7f6e\u989c\u8272\u3002</p> <pre><code>Notification notification =\n    new NotificationCompat.Builder(context)\n        .setContentTitle(\"Title\")\n        .setContentText(\"This is a notification!\")\n        .setSmallIcon(R.drawable.ic_bell)\n        .setColor(Color.parseColor(\"#4B8A08\"))\n        .build();\n</code></pre>"},{"location":"patterns/notifications/#_3","title":"\u5305\u542b\u56fe\u7247\u7684\u901a\u77e5","text":"<p>\u4f7f\u7528 <code>NotificationCompat.Builder</code> \u7684 <code>setLargeIcon(Bitmap)</code> \u65b9\u6cd5\u7ed9\u901a\u77e5\u7684\u8bbe\u7f6e\u5c0f\u56fe\u6807\u65c1\u8fb9\u7684\u5927\u56fe\u6807\u3002</p> <pre><code>Notification notification =\n    new NotificationCompat.Builder(context)\n        .setContentTitle(\"Title\")\n        .setContentText(\"This is a notification!\")\n        .setSmallIcon(R.drawable.ic_bell)\n        .setLargeIcon(profileImageBitmap) // Bitmap\n        .setColor(Color.parseColor(\"#4B8A08\"))\n        .build();\n</code></pre>"},{"location":"patterns/notifications/#_4","title":"\u632f\u52a8\u901a\u77e5","text":"<p>\u4f7f\u7528 <code>NotificationCompat.Builder</code> \u7684 <code>setVibrate</code> \u65b9\u6cd5\u8bbe\u7f6e\u4e00\u4e2a\u5e26\u6709\u632f\u52a8\u6a21\u5f0f\u7684\u901a\u77e5\u3002</p> <pre><code>long[] vibratePattern = new long[] {\n   millisToWait, millisToVibrate,\n   millisToWait, millisToVibrate\n}\n\nNotification notification =\n    new NotificationCompat.Builder(context)\n        .setContentTitle(\"Title\")\n        .setContentText(\"This is a notification!\")\n        .setSmallIcon(R.drawable.ic_bell)\n        .setVibrate(vibratePattern)\n        .build();\n</code></pre> <p>\u5907\u6ce8</p> <p>\u4e3a\u4e86\u80fd\u591f\u4f7f\u7528\u632f\u52a8\uff0c\u4f60\u9700\u8981\u5728 <code>AndroidManifest.xml</code> \u91cc\u58f0\u660e <code>android.permission.VIBRATE</code> \u6743\u9650\u3002</p>"},{"location":"patterns/notifications/#_5","title":"\u5e26\u547c\u5438\u706f\u7684\u901a\u77e5","text":"<p>\u4f7f\u7528 <code>NotificationCompat.Builder</code> \u7684 <code>setLights(int argb, int msOn, int msOff)</code> \u65b9\u6cd5\u5b9a\u5236\u8bbe\u5907\u8981\u663e\u793a\u7684\u547c\u5438\u706f\u7684\u989c\u8272\u548c LED \u6a21\u5f0f\u3002</p> <pre><code>Notification notification =\n   new NotificationCompat.Builder(context)\n      .setContentTitle(\"Title\")\n      .setContentText(\"This is a notification!\")\n      .setSmallIcon(R.drawable.ic_bell)\n      .setLights(Color.MAGENTA, onMillis, offMillis)\n      .build();\n</code></pre>"},{"location":"patterns/notifications/#_6","title":"\u6280\u5de7\u548c\u6700\u4f73\u5b9e\u8df5","text":"<p>I. \u4e13\u95e8\u9488\u5bf9\u65f6\u95f4\u654f\u611f\u7684\u7528\u6237\u8fdb\u884c\u901a\u77e5\u3002</p> <p>II. \u5bf9\u4e8e\u53e6\u5916\u4e00\u4e2a\u4eba\u53d1\u7684\u901a\u77e5\uff0c\u8981\u5305\u542b\u4ed6\u7684\u56fe\u7247\u3002</p> <p>III. \u5f53\u7528\u6237\u70b9\u51fb\u4e00\u4e2a\u901a\u77e5\u7684\u65f6\u5019\uff0c\u5141\u8bb8\u7528\u6237\u76f4\u63a5\u8fdb\u884c\u64cd\u4f5c\u3002\u8fd9\u53ef\u80fd\u4f1a\u6253\u4e00\u4e2a\u8be6\u60c5\u89c6\u56fe\uff0c\u5982\u4e00\u6761\u4fe1\u606f\uff0c\u6216\u8005\u591a\u4e2a\u901a\u77e5\u7684\u6458\u8981\u89c6\u56fe\u3002</p> <p>IV. \u5f53\u6ca1\u6709\u4f7f\u7528 <code>setLargeIcon</code> \u65b9\u6cd5\uff0c\u800c\u4f7f\u7528\u4e86 <code>setSmallIcon</code> \u65b9\u6cd5\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4f7f\u7528\u5706\u5f62\u56fe\u7247\u3002\u5f53\u4f7f\u7528\u4e86 <code>setLargeIcon</code> \u65b9\u6cd5\u65f6\uff0c\u8981\u7528\u5706\u5f62\u56fe\u7247\u65f6\u5219\u8981\u624b\u52a8\u8bbe\u7f6e\u3002</p> <p> </p> <p>Warning</p> <p>\u539f\u6587\u4f5c\u8005\uff1aSa\u00fal D\u00edaz Gonz\u00e1lez \u7ffb\u8bd1\uff1aAilurus</p>"},{"location":"patterns/notifications/#expanded-notifications-layouts","title":"Expanded Notifications Layouts","text":"<p>Quote</p> <p>From the Google Material Design documentation_</p> <p>You can choose how much detail your app's notifications should provide. They can show the first few lines of a message or show a larger image preview.</p> <p>The additional information provides the user with more context, and\u2014in some cases\u2014may allow the user to read a message in its entirety.</p>"},{"location":"patterns/notifications/#how-to-use-it","title":"How to use it?","text":"<p>I. Add the latest version of appcompat library on your <code>build.gradle</code>.</p> <pre><code>dependencies {\n    compile 'com.android.support:appcompat-v7:X.X.X'\n    // X.X.X especifica la versi\u00f3n\n}\n</code></pre> <p>II. Retrieve an instance of <code>NotificationCompat.Builder</code>.</p> <pre><code>NotificationCompat.Builder builder =\n    new NotificationCompat.Builder(context);\n</code></pre> <p>III. Apply a style to the <code>NotificationCompat.Builder</code></p> <pre><code>NotificationCompat.BigTextStyle style = new NotificationCompat.BigTextStyle(builder);\n</code></pre> <p>IV. You have several styles available.</p> <pre><code>// Big Text Style\nNotificationCompat.BigTextStyle style\n    = new NotificationCompat.BigTextStyle(builder);\n</code></pre> <pre><code>// Big Picture Style\nNotificationCompat.BigPictureStyle style\n    = new NotificationCompat.BigPictureStyle(builder);\n</code></pre> <pre><code>// Inbox Style\nNotificationCompat.InboxStyle style\n    = new NotificationCompat.InboxStyle(builder);\n</code></pre> <p>V. Build a <code>Notification</code> using the <code>NotificationCompat.Builder</code></p> <pre><code>Notification notification = builder\n    .setContentTitle(\"Title\")\n    .setContentText(\"This is a notification!\")\n    .setSmallIcon(R.drawable.ic_notifications_white_small)\n    .build();\n</code></pre> <p>VI. Pass along the <code>Notification</code> object via <code>notify</code> method from  <code>NotificationManagerCompat</code> and assign an ID of your choice.</p> <pre><code>NotificationManagerCompat notificationManager =\n    NotificationManagerCompat.from(context);\n\nnotificationManager.notify(0x1234, notification);\n</code></pre> <p>Note</p> <p>Title, text and small icon are mandatory so the notification can be displayed.</p>"},{"location":"patterns/notifications/#big-text-style","title":"Big Text Style","text":"<p>Big Text Style is used to show large quantities of text. The notification body can hold around <code>450</code> characters. The rest of the text will be trimmed without the use of an ellipsis.</p> <p>I. Apply the style by passing the builder to a <code>NotificationCompat.BigTextStyle</code> instance.</p> <pre><code>NotificationCompat.BigTextStyle style =\n    new NotificationCompat.BigTextStyle(builder);\n</code></pre> <p>II. Set the long text you want to display on the expanded mode.</p> <pre><code>style.bigText(\"The path of...\" /* long text goes here */ );\n</code></pre> <p>Note</p> <p>For the compressed layout, the text set via <code>setContentText</code> of <code>NotificationCompat.Builder</code> will be shown.</p> <p>III. Use the method <code>setBigContentTitle</code> of <code>NotificationCompat.BigTextStyle</code> if you want a different title for the expanded layout form.</p> <pre><code>style.bigText(\"The path of...\" /* long text goes here */)\n     .setBigContentTitle(\"Expanded title\");\n</code></pre> <p>Note</p> <p>If you do not call this method the title will fallback to the value you set on <code>setContentTitle</code> from <code>NotificationCompat.Builder</code>.</p> <p>IV. Add if you like an additional summary to the expanded layout form.</p> <pre><code>style.bigText(\"The path of...\" /* long text goes here */ )\n     .setBigContentTitle(\"Expanded title\")\n     .setSummaryText(\"Summary text\");\n</code></pre>"},{"location":"patterns/notifications/#big-picture-style","title":"Big Picture Style","text":"<p>Note</p> <p>Big Picture Style is used to show image-rich content. The image limits will be phone screen length by <code>256dp</code> height. On Tablets, the image is 2:1 ratio. The rest of the image will be cropped with a <code>ScaleType.CROP_CENTER</code>.</p> <p>I. Create a new instance of <code>NotificationCompat.BigPictureStyle</code> which will accept a <code>NotificationCompat.Builder</code> instance.</p> <pre><code>NotificationCompat.BigPictureStyle style\n    = new NotificationCompat.BigPictureStyle(builder);\n</code></pre> <p>Note</p> <p>Check how <code>NotificationCompat.Builder</code> are managed on the basic notifications article.</p> <p>II. Add the image you want to display by using <code>BigPictureStyle.bigPicture</code> method. The format of the image must be a <code>Bitmap</code>.</p> <pre><code>Bitmap picture = BitmapFactory.decodeResource(getResources(), R.drawable.conga);\nstyle.bigPicture(picture);\n</code></pre> <p>III. Add a new <code>LargeIcon</code> if you want to change it. In other case it will default to <code>NotificationCompat.Builder.setLargeIcon(Bitmap)</code>.</p> <pre><code>Bitmap largeExpandedAvatar = BitmapFactory.decodeResource(\n             getResources(), R.drawable.koala_avatar)  \n\nstyle.bigPicture(picture)\n     .bigLargeIcon(largeExpandedAvatar);\n</code></pre> <p>IV. Add a new title for the expanded layout form.</p> <pre><code>Bitmap picture = BitmapFactory.decodeResource(getResources(), R.drawable.conga);\nBitmap largeExpandedAvatar = BitmapFactory.decodeResource(\n             getResources(), R.drawable.koala_avatar)  \n\nstyle.bigPicture(picture)\n     .bigLargeIcon(largeExpandedAvatar);\n     .setBigContentTitle(\"Expanded title\")\n</code></pre> <p>V. Add a summary which sums up the notification content. <pre><code>Bitmap picture = BitmapFactory.decodeResource(getResources(), R.drawable.conga);\nBitmap largeExpandedAvatar = BitmapFactory.decodeResource(\n             getResources(), R.drawable.koala_avatar)  \n\nstyle.bigPicture(picture)\n     .bigLargeIcon(largeExpandedAvatar);\n     .setBigContentTitle(\"Expanded title\")\n     .setSummaryText(\"Summary text\");\n</code></pre></p>"},{"location":"patterns/notifications/#inbox-style","title":"Inbox Style","text":"<p>Quote</p> <p>Inbox Style allows a notification made of several independent lines of short text, as in the normal notifications. This style accepts up to <code>7</code> lines. Any number above the notification will ellipsize further lines by adding a \"...\".</p> <p>I. Apply the style by creating a new <code>NotificationCompat.BigPictureStyle</code> instance.</p> <pre><code>NotificationCompat.InboxStyle style =\n    new NotificationCompat.InboxStyle(builder);\n</code></pre> <p>II. Add as many lines as you wish. <pre><code>style.addLine(\"This is line #\" + i);\n</code></pre> III. Add a different title if you want by using <code>setBigContentTitle</code>. <pre><code>style.addLine(\"This is line #\" + i)\n    .setBigContentTitle(\"Expanded title\");\n</code></pre></p> <p>IV. Optionally add a summary to the notification.</p> <pre><code>style.addLine(\"This is line #\" + i)\n    .setBigContentTitle(\"Expanded title\")\n    .setSummaryText(\"Summary text\");\n</code></pre>"},{"location":"patterns/notifications/#tricks-and-good-practices","title":"Tricks and good practices","text":"<p>I. Guidelines insist that every app should display a single notification at all times in order to keep the notification list clean. Use <code>InboxStyle</code> to join several notifications in one while providing a history of the last ones.</p> <p>II. Expanded layouts will be automatically displayed when the notification list have enough space, while compressing them otherwise. Play with different titles, <code>LargeIcon</code> and summaries to pick the interest of your user in both cases. If your notification is related to an image content, make it more attractive by using <code>BigPictureStyle</code>.</p> <p>III. If your notification does not require images and there is only one, using by default <code>BigTextStyle</code> will not hurt. In this way, you will ensure that you can accomodate as much text as possible and giving the user the maximum context available.</p>"},{"location":"patterns/swipe-to-refresh/","title":"Swipe to refresh","text":"<p>From the Google Material Design documentation</p> <p>Swipe to refresh manually refreshes screen content with a user action or gesture.</p>"},{"location":"patterns/swipe-to-refresh/#how-to-add","title":"How to add?","text":"<p>I. Add the last version of the <code>support-v4</code> library to your  <code>build.gradle</code> file. <pre><code>dependencies {  \n    compile 'com.android.support:support-v4:X.X.X'\n    // where X.X.X is the last version available\n}\n</code></pre></p> <p>II. Create your layout file and declare <code>SwipeRefreshLayout</code>inside. This view is usually along with lists, but you can use it with any view that fits your design.</p> <pre><code>&lt;android.support.v4.widget.SwipeRefreshLayout\n    android:id=\"@+id/swipe_refresh_layout\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"&gt;\n\n    &lt;ListView\n        android:id=\"@+id/listview\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"/&gt;\n\n&lt;/android.support.v4.widget.SwipeRefreshLayout&gt;\n</code></pre> <p>III. Proceed with the refresh listening the events in the Activity using a <code>SwipeRefreshLayout.OnRefreshListener</code> instance.</p> <pre><code>SwipeRefreshLayout swipeRefreshLayout =\n        (SwipeRefreshLayout) findViewById(R.id.activity_main_swipe_refresh_layout);\nswipeRefreshLayout.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {\n        @Override\n        public void onRefresh() {\n            refreshData();\n        }\n});\n</code></pre> <p>IV. To cancel the progress animation use <code>setRefreshing</code> method.</p> <pre><code>swipeRefreshLayout.setRefreshing(false);\n</code></pre>"},{"location":"patterns/swipe-to-refresh/#how-to-style","title":"How to style?","text":"<p>To define your own color scheme for the loading icon.</p> <p>I. Define the colors you want to use it. <pre><code>&lt;resources&gt;\n    &lt;color name=\"pink\"&gt;#FF4081&lt;/color&gt;\n    &lt;color name=\"indigo\"&gt;#3F51B5&lt;/color&gt;\n    &lt;color name=\"lime\"&gt;#CDDC39&lt;/color&gt;\n&lt;/resources&gt;\n</code></pre></p> <p>II. Assign the colors to the view with the <code>setColorSchemeResources</code> method. <pre><code>swipeRefreshLayout.setColorSchemeResources(R.color.pink, R.color.indigo, R.color.lime);\n</code></pre></p>"}]}